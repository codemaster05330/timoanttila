{
	"howtosetupcrontabtoremovethephpsessionfiles": {
		"title": "How to setup crontab to remove the php session files",
		"url": "how-to-setup-crontab-to-remove-the-php-session-files",
		"pub1": "Apr 21, 2020",
		"pub2": "2020-04-21",
		"desc": "How to find hidden system files that keeps filling hard drive and how to remove old and unnecessary PHP session files.",
		"body": "\u003Cp\u003EHave you ever run out of hard drive space even when \u003Cem\u003Edf -h\u003C\/em\u003E tells there's a lot of space still unused? I've been using Ubuntu and Debian for a long time, but have never before come against this kind of problem. I looked for the problem for a long time and deleted all possible unnecessary files from the disk, but the hard drive quickly refilled.\u003C\/p\u003E\n\n\u003Cp\u003EWhile looking for a solution to the problem, I found an software called \u003Cem\u003Encdu\u003C\/em\u003E (NCurses Disk Usage). Ncdu is a disk usage analyzer with an ncurses interface. It is designed to find space hogs on a remote server where you don't have an entire graphical setup available. Like a gift from heaven.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo apt install ncdu\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENcdu is an awesome software for finding problems and it helped me find a 5.5 GB PHP sessions directory.\u003C\/p\u003E\n\n\u003Cp\u003EThe server has been running for over three years and I have never cleaned old PHP session files. These files should be deleted with the correct setting in the \u003Cem\u003Ephp.ini\u003C\/em\u003E file (\u003Cem\u003Esession.gc_maxlifetime\u003C\/em\u003E), but apparently it is not configured by default. There were 1 216 910 unnecessary files. Normal rm -f could not destroy the files, so had to look for an alternative solution and a simple perl script solved the problem.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ecd \/var\/lib\/php\/sessions\nperl -e 'for(<*>){((stat)[9]<(unlink))}'\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EUbuntu\/Debian have a script (\u003Cem\u003E\/etc\/cron.d\/php\u003C\/em\u003E) to do the cleanup automatically, but I guess it's broken. Because I like simple answers to problems, I added the following line to root \u003Cem\u003Ecrontab\u003C\/em\u003E:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ecrontab -e\n16 3 * * 1 rm -f \/var\/lib\/php\/sessions\/*\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThe command destroys all files in the directory on Monday at 3:16. Problem solved.\u003C\/p\u003E"
	},
	"bashreplacelineinfile": {
		"title": "Change number in file with Bash script",
		"url": "bash-replace-line-in-file",
		"pub1": "Feb 2, 2017",
		"pub2": "2017-02-02",
		"desc": "My goal was read the number in the file, and if the number is smaller than three add one to it, and if bigger reset the number to one. Write new to the file.",
		"body": "\u003Cp\u003EIn this case I had to create a view to website where lunch list changes every week in three week cycles. I did actual view with PHP, but the number changes every week was better done to separately. PHP is only loaded when someone visits the page, and no one visits that page in the middle of the night. So I made a Bash script which reads a file's first line, then add one to that number and write the new number to the file. This tutorial is how that Bash script works, not about the list view.\u003C\/p\u003E\n\n\u003Cp\u003ESometimes you may want to look at a file's first line only. Command head is very useful for this. If you want to read only the first line of the file:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ehead -n 1 file\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EAnd if you want to see three lines of that file:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ehead -n 3 file\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYou can also used *sed*. This prints the first line and then quits:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esed q file\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIn this case I wanted to read the first line of the file and save it as variable.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Efile=\u201c\/path\/to\/file.txt\u201d\nline=$(head -n 1 \u201c$file\u201d)\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENow I have a number. If the number is not bigger than three, add one to that number. If the number is bigger than three it should be reset to one.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E(( line > 3 )) && (( line++ )) || line=1\necho \u201c$line\u201d > \u201c$file\u201d\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENow we have a new number which tells us which list we want to use next week and the script wrote it to the file. Here's the same script as a whole and shortcutted by \u003Ca href=\"https:\/\/www.reddit.com\/user\/galaktos\" target=\"_blank\" rel=\"noopener\"\u003Egalaktos\u003C\/a\u003E from \u003Ca href=\"https:\/\/www.reddit.com\/r\/bash\/comments\/5tlap6\/how_to_replace_a_line_in_a_text_file\/\" target=\"_blank\" rel=\"noopener\"\u003Ereddit\u003C\/a\u003E. Thanks for help.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E#!\/bin\/bash\nfile=\"\/path\/to\/file.txt\"\nline=$(head -n1 -- \"$file\")\nprintf '%d\\n' \"$((++line>3?1:line))\" >| \"$file\"\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EHow to run a script automatically in Linux\u003C\/h2\u003E\n\n\u003Cp\u003ECrontab is our friend when want to do things automatically in Linux. I wanted the script to run every Saturday.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ecrontab -e\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EAdd this line:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E0 0 * * Sat \/home\/user\/scripts\/bash-script\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThis command runs every Saturday at 00:00.\u003Cbr \/\u003E\nCron timing: minute 0-59, hour 0-23, day of month 1-31, month 1-12, day of week 0-6 (or Sun-Sat).\u003C\/p\u003E\n\n\u003Cp\u003ENow we are all set. The number will change every Saturday till the end of the days (or till the server is dead).\u003C\/p\u003E"
	},
	"contactform": {
		"title": "How to create a simple contact form",
		"url": "contact-form",
		"pub1": "Jan 1, 2017",
		"pub2": "2017-01-01",
		"desc": "HTML Forms are one of the main points of interaction between a user and a web site. This tutorial teaches you how to make one.",
		"body": "\u003Cp\u003E\u003Cstrong\u003EHTML Forms\u003C\/strong\u003E are one of the main points of interaction between a user and a web site.\u003C\/p\u003E\n\n\u003Cp\u003EI mostly use module for \u003Ca href=\"https:\/\/www.drupal.org\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EDrupal\u003C\/a\u003E when needed web forms, but sometimes clients need something special. Things that normal web form can\u2019t provide. This tutorial teaches how to create a simple web form, validate its data and send it as HTML e-mail. I also use email provided by the form as sender\u2019s email so the client can press reply when contacting customer. You can also save all data to MySQL \/ MariaDB database if needed.\u003C\/p\u003E\n\n\u003Cp\u003EFirst, we need to create a form with basic text input fields and some radio box fields.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E&lt;form method=\"post\" action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]);?&gt;\"&gt;\n&lt;input placeholder=\"name\" type=\"text\" name=\"name\" maxlength=\"30\" autofocus required&gt;\n&lt;input placeholder=\"email\" type=\"text\" name=\"email\" maxlength=60 autocomplete=on required&gt;\n&lt;textarea name=comment rows=5 cols=40 value=message required&gt;&lt;\/textarea&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;input name=\"list2\" type=\"radio\" value=\"Value 1\" \/&gt;&lt;\/li&gt;\n&lt;li&gt;&lt;input name=\"list2\" type=\"radio\" value=\"Value 2\" \/&gt;&lt;\/li&gt;\n&lt;\/ul&gt;\n&lt;input type=\"submit\" value=\"Send\" name=\"submit\"&gt;\n&lt;\/form&gt;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENotice that I used \u003Cstrong\u003E<?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]);?>\u003C\/strong\u003E instead of \u003Cstrong\u003E#\u003C\/strong\u003E. That's because the \u003Cstrong\u003Ehtmlspecialchars()\u003C\/strong\u003E function converts special characters to HTML entities. This prevents attackers from exploiting the code by injecting HTML or Javascript code (Cross-site Scripting attacks) in forms.\u003C\/p\u003E\n\n\u003Cp\u003EThe name attribute is used to reference elements in PHP, or to reference form data after a form is submitted. The value attribute specifies the value that is sent to submit. The radio fields use the same name and those does not need foreach because only one selection can be active at a time.\u003C\/p\u003E\n\n\u003Cp\u003ENow that we have a form ready to use, we need to make PHP code which fetches submitted data from the field, process it and send an HTML email to whoever is the recipient of the message.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E&lt;?php\n\/\/ Things to happen after pressing Submit.\nif($_POST[\"submit\"]) {\n\n\/\/ Define variables and set to empty values.\n$list = $data = \"\";\n\n\/\/ Fetch and validate data from text fields\n$name = strip_tags($_POST['name']); \/\/ Sender\u2019s name\n$email = strip_tags($_POST[\"email\"]); \/\/ Sender\u2019s address\n$comment = strip_tags($_POST[\"comment\"]); \/\/ Message\n\n\/\/ Fetch data from radio button\n$list = $_POST[\"list2\"];\n\n$to = \"info@example.com\"; \/\/ Recipient of the message\n$subject = \"Message header\";\n$headers = \"From: \" . $email . \"\\r\\n\";\n$headers .= \"MIME-Version: 1.0\\r\\n\";\n$headers .= \"Content-Type: text\/html; charset=UTF-8\\r\\n\";\n$message = \"&lt;html&gt;&lt;body&gt;\";\n$message .= \"&lt;p&gt;$comment&lt;\/p&gt;\";\n$message .= $list;\n$message .= \"&lt;\/body&gt;&lt;\/html&gt;\";\n\n\/\/ Send mail mail($to, $subject, $message, $headers); ?&gt;\n&lt;script type=\"text\/javascript\"&gt;window.location = \"https:\/\/timoanttila.com\/\";&lt;\/script&gt;\n&lt;?php } ?&gt;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EHow to save all data from webform submissions to SQL database\u003C\/h2\u003E\n\n\u003Cp\u003EYou need to make a table with all rows you need to.\u003C\/p\u003E\n\n\u003Cp\u003EPut similar code after mail(). If you want a more secure method then make sql.php and put it somewhere where it's not accessible from the Internet and call it \u003Cstrong\u003Einclude('\/somewhere\/sql.php');\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E&lt;?php\n$servername = \"Server IP\";\n$username = \"Username\";\n$password = \"Password\";\n$dbname = \"Database\";\n$table = \"Table\";\n\n\/\/ Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\/\/ Check connection\nif ($conn-&gt;connect_error) die(\"Connection failed: \" . $conn-&gt;connect_error);\n$time = date(\"Y-m-d H:i\");\n$conn-&gt;query(\"INSERT INTO Form (Name, Email, Message, Up) VALUES ('$name', '$email', '$comment', '$time')\");\n$conn-&gt;close();\n?&gt;\u003C\/code\u003E\u003C\/pre\u003E"
	},
	"flickrphotoalbumsonprocesswire": {
		"title": "Flickr photo albums on ProcessWire",
		"url": "flickr-photo-albums-on-processwire",
		"pub1": "Nov 11, 2016",
		"pub2": "2016-11-11",
		"desc": "A tutorial how to set up Flickr photo galleries on ProcessWire. I modified Sergio's photo downloading script and made Photobox effect for galleries.",
		"body": "\u003Cp\u003ESome of our clients have been using two \u003Ca href=\"https:\/\/www.flickr.com\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EFlickr\u003C\/a\u003E modules on \u003Ca href=\"https:\/\/www.drupal.org\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EDrupal\u003C\/a\u003E to get their photos from Flickr to the website, but now they were moving from Drupal to \u003Ca href=\"https:\/\/processwire.com\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EProcessWire\u003C\/a\u003E. Flickr was important to them, so I had to figure out how to make those photo galleries on ProcessWire.\u003C\/p\u003E\n\n\u003Cp\u003ELuckily \u003Ca href=\"https:\/\/processwire.com\/talk\/profile\/367-sergio\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ES\u00e9rgio\u003C\/a\u003E from ProcessWire forum had made a script that, given an album ID, download its data using cURL and save the photos to a temp dir. After that, add them to a new page. But I didn't want to download photos to our server, I just wanted to fetch all photo urls. So I modified his code to suit my needs.\u003C\/p\u003E\n\n\u003Cp\u003EFirst, you need to download S\u00e9rgio's script from \u003Ca href=\"https:\/\/github.com\/sjardim\/processwire-simple-flickr-album\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EGitHub\u003C\/a\u003E. You need to add lib folder somewhere where ProcessWire's template can access it. Those files does not need to be public. Then make a new template for photo galleries and make template file for it.\u003C\/p\u003E\n\n\u003Cp\u003EI made a new template 'kuvat' (means photos) with fields for Flickr album id and image field for listing and the meta\/OG tags. Only bad thing is that user have to add each gallery separately. But script works pretty well and galleries urls are way better than what we had on Drupal.\u003C\/p\u003E\n\n\u003Cp\u003EIf you want to use a Photobox effect for galleries instead of Lightbox, use the same photo url for a link and thumbnail. If using Lightbox, you can use smaller thumbnails for faster loading.\u003C\/p\u003E\n\n\u003Cp\u003EAdd following PHP code to the new template file.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E<?php\ninclude \"..\/lib\/curl.class.php\";\ninclude \"..\/lib\/flickr_album_utils.php\";\n$album = fa_get_album($page->flickrid);\n$images = array();\nforeach($album[\"all_images\"] as $f) { \n$photo = 'https:\/\/farm'.$f[\"farm\"].'.staticflickr.com\/'.$f[\"server\"].'\/'.$f[\"id\"].'_'.$f[\"secret\"].'_b.jpg';\n$thumb = 'https:\/\/farm'.$f[\"farm\"].'.staticflickr.com\/'.$f[\"server\"].'\/'.$f[\"id\"].'_'.$f[\"secret\"].'_q.jpg';\necho \"<a href='$photo'><?img src='$thumb' alt=''\/>\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ERemember to change paths for lib files. Next edit flickr_album_utils.php and put your Flickr's secret key to its place.\u003C\/p\u003E\n\n\u003Cp\u003EYou should now see photos from the album you chose. However, loading all photos from external server on every page load is not the best idea.\u003C\/p\u003E\n\n\u003Ch2\u003EFlickr photo sizes\u003C\/h2\u003E\n\n\u003Cul\u003E\u003Cli\u003Es: 75 x 75\u003C\/li\u003E\n\t\u003Cli\u003Eq: 150 x 150\u003C\/li\u003E\n\t\u003Cli\u003Et: 100 x 75\u003C\/li\u003E\n\t\u003Cli\u003Em: 240 x 180\u003C\/li\u003E\n\t\u003Cli\u003En: 320 x 320\u003C\/li\u003E\n\t\u003Cli\u003Ez: 640 x 640\u003C\/li\u003E\n\t\u003Cli\u003Ec: 800 x 600\u003C\/li\u003E\n\t\u003Cli\u003Eb: 1024 x 768\u003C\/li\u003E\n\t\u003Cli\u003Eo: 2400 x 1800\u003C\/li\u003E\n\u003C\/ul\u003E\u003Ch2\u003EReferences\u003C\/h2\u003E\n\n\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/processwire.com\/talk\/topic\/10145-how-to-get-and-save-flickr-albums-to-a-page-via-api\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EHow to get and save Flickr albums to a page via API\u003C\/a\u003E\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/sjardim\/processwire-simple-flickr-album\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EProcesswire Simple Flickr Album\u003C\/a\u003E\u003C\/li\u003E\n\u003C\/ul\u003E"
	},
	"offsettinganchorlinkswithfixedheader": {
		"title": "Offsetting anchor links with fixed header",
		"url": "offsetting-anchor-links-with-fixed-header",
		"pub1": "Oct 10, 2016",
		"pub2": "2016-10-10",
		"desc": "Using anchor links with a fixed header is a problem, as the body text may be hidden underneath the header. No JavaScript needed.",
		"body": "\u003Cp\u003EUsing anchor links with a fixed header is a problem, as the body text may be hidden underneath the header as the browser's default offset is zero pixels from top. So, how to change starting point to be 60px down from the top?\u003C\/p\u003E\n\n\u003Cp\u003EI have found two ways to handle this problem. First, I can use the empty space before or after ID. Most of times that looks good if the header\u2019s height is less than 60px. If header is higher than that\u2019s probably not going and one must use another way to force the browser to scroll to the right position.\u003C\/p\u003E\n\n\u003Cp\u003EThe best way to solve this problem is using padding and margin. First, use :before and padding to it (padding-top: 90px) to make enough space before the ID. Then, degree that same amount with margin (margin-top: -90px).\u003C\/p\u003E\n\n\u003Cp\u003EThe reason I'm needing this is because I have fixed layers at the top of the page, so the comment is appearing overlapped behind the fixed header div.\u003C\/p\u003E\n\n\u003Cp\u003EJust in case, because of cross-browser compliance I prefer a solution that does not involve changing the container of the comment to fixed and positioning top minus the height of the header.\u003C\/p\u003E\n\n\u003Ch2\u003EHTML:\u003C\/h2\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E<div class=\"jump\" id=\"info\">\n<h3>Info<\/h3>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed eu ex sed tellus viverra rutrum.<\/p>\n<\/div>\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ECSS:\u003C\/h2\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E.jump:before {\n content: \"\";\n display: block;\n padding-top: 90px; \/* header height + empty space *\/\n margin-top: -50px; \/* header height to degrees padding\u2019s space *\/\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYou should also use \u003Ca href=\"\/tutorials\/animated-smooth-scrolling-effect\"\u003Esmooth scrolling\u003C\/a\u003E with anchor links.\u003C\/p\u003E"
	},
	"leveragebrowsercaching": {
		"title": "How to leverage browser caching",
		"url": "leverage-browser-caching",
		"pub1": "Sep 9, 2016",
		"pub2": "2016-09-09",
		"desc": "Page load times can be significantly improved by asking visitors to save and reuse the files included in your website.",
		"body": "\u003Cp\u003ENormally, the website should load all its content under two seconds and hopefully even faster, but websites with a lot of pictures and JavaScript may take way too long time to load. And those websites also make a lot of requests to the web server. First visit is always harder and takes longer time to load, but after that, those websites could use browser caching instead of loading all that data again from the website's server.\u003C\/p\u003E\n\n\u003Cp\u003EBrowser caching stores some of the loaded files locally in the user's browser. Files like all the HTML, CSS, JavaScripts and images. When a user visits a same website again, refreshes page or moves to new page in the same website, they already have some of the data locally and requested page load faster. Less data to load and less requests to the server.\u003C\/p\u003E\n\n\u003Cp\u003EEasiest way to enable browser caching on a website running on Apache2 is modify to file called .htaccess. The \"code\" below tells browsers how long it should \"remember\" files loaded from the web site.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E<IfModule mod_expires.c>\nExpiresActive On\nExpiresByType image\/jpg \"access 1 month\"\nExpiresByType image\/jpeg \"access 1 month\"\nExpiresByType image\/png \"access 1 year\"\nExpiresByType text\/css \"access 1 month\"\nExpiresByType text\/html \"access 1 month\"\nExpiresByType application\/pdf \"access 1 year\"\nExpiresByType application\/javascript \"access 1 year\"\nExpiresByType application\/x-javascript \"access 1 year\"\nExpiresByType image\/x-icon \"access 1 year\"\nExpiresDefault \"access 2 days\"\n<\/IfModule>\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch3\u003ERead more\u003C\/h3\u003E\n\n\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/varvy.com\/pagespeed\/leverage-browser-caching.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVarvy\u003C\/a\u003E\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"https:\/\/gtmetrix.com\/leverage-browser-caching.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EGTmetrix\u003C\/a\u003E\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"https:\/\/developers.google.com\/web\/fundamentals\/performance\/optimizing-content-efficiency\/http-caching\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EGoogle PageSpeed Insights\u003C\/a\u003E\u003C\/li\u003E\n\u003C\/ul\u003E"
	},
	"rsync": {
		"title": "Use rsync to sync local and remove files",
		"url": "rsync",
		"pub1": "May 5, 2016",
		"pub2": "2016-05-05",
		"desc": "Rsync is a powerful tool that facilitates the transfer and synchronization of data between both local and remote systems.",
		"body": "\u003Cp\u003E\u003Cstrong\u003E\u003Ca href=\"https:\/\/linux.die.net\/man\/1\/rsync\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ERsync\u003C\/a\u003E\u003C\/strong\u003E is a powerful tool that facilitates the transfer and synchronization of data between both local and remote systems.\u003C\/p\u003E\n\n\u003Cp\u003ERsync finds files that need to be transferred using a lqquick checkrq algorithm (by default) that looks for files that have changed in size or in last-modified time. Any changes in the other preserved attributes (as requested by options) are made on the destination file directly when the quick check indicates that the file's data does not need to be updated.\u003C\/p\u003E\n\n\u003Cp\u003EThis short line transfers all new and modified files from Server_1 to Server_2. Take less time and bandwidth than full copy over SSH. It does not touch local files so you don't need write permission on Server_1 (and in my case my user has no write permission to \/wwwroot).\u003C\/p\u003E\n\n\u003Cp\u003EFirst, you need to set up SSH keys so you can log into a remote server without prompting password. After that's done, you need to make your own command with variables.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ersync -azq \/wwwroot\/ timo@Server_2:\/wwwroot\/\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThe \u003Cstrong\u003E-a\u003C\/strong\u003E option is a combination flag which stands for \"archive\" and syncs recursively and preserves symbolic links, special and device files, modification times, group, owner, and permissions. The \u003Cstrong\u003E-z\u003C\/strong\u003E compress file data during the transfer and the \u003Cstrong\u003E-q\u003C\/strong\u003E option suppress non-error messages.\u003C\/p\u003E\n\n\u003Cp\u003EIf you like to see what is going on you should use \u003Cstrong\u003E-azhvP\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EThe \u003Cstrong\u003E-P\u003C\/strong\u003E option combines \u003Cstrong\u003E--progress\u003C\/strong\u003E and \u003Cstrong\u003E--partial\u003C\/strong\u003E. You can see a progress bar and can resume interrupted transfers. The \u003Cstrong\u003E-h\u003C\/strong\u003E output numbers in a human-readable format and the \u003Cstrong\u003E-v\u003C\/strong\u003E increase verbosity. So more information which is easier to read.\u003C\/p\u003E\n\n\u003Ch2\u003ECrontab\u003C\/h2\u003E\n\n\u003Cp\u003EBut this should work automatically without user running things so let's use cron to handle sync. Make a new file and write something like this example.\u003C\/p\u003E\n\n\u003Cp\u003ETo command line:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ecrontab -e\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EEdit crontab:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E15 1 * * Sat rsync -avh \/wwwroot\/ timo@Server_2:\/wwwroot\/ > \/dev\/null 2>&1\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThis command runs every Saturday at 01:15.\u003Cbr \/\u003E\nCron timing: minute 0-59, hour 0-23, day of month 1-31, month 1-12, day of week 0-6.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ecrontab -l\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYou can learn more about rsync \u003Ca href=\"https:\/\/linux.die.net\/man\/1\/rsync\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ehere\u003C\/a\u003E.\u003Cbr \/\u003E\nEasiest way to \u003Ca href=\"https:\/\/crontab.guru\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Elearn cron\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EThanks for reading and happy rsyncing!\u003C\/p\u003E"
	},
	"backupyourdataautomaticallyonlinux": {
		"title": "How to automatic backup data in Linux",
		"url": "backup-your-data-automatically-on-linux",
		"pub1": "Apr 4, 2016",
		"pub2": "2016-04-04",
		"desc": "Backups are one of the most important things when running a server and these scripts help backup your important data automatically.",
		"body": "\u003Cp\u003EBackups are one of the most important things when running a server where are clients' data and files. These two scripts help backup your important data from \u003Ca href=\"\/tutorials\/mysql\"\u003EMySQL \/ MariaDB\u003C\/a\u003E and all the files from website's folder. You can put both of these scripts in the same file, but I like to keep them separated.\u003C\/p\u003E\n\n\u003Ch2\u003EBackup MySQL \/ MariaDB databases\u003C\/h2\u003E\n\n\u003Cp\u003EData is changing daily and there has to be very recent backup available if something bad happening. You never know what may happen, so better safe than sorry. Most of the times, once per day is enough if you don't run a very popular web store.\u003C\/p\u003E\n\n\u003Cp\u003EThe script wants to know the username and password for root \/ backup user which has enough power to fetch databases one by one. What the user needs is \u003Cstrong\u003EEVENT\u003C\/strong\u003E, \u003Cstrong\u003ELOCK TABLES\u003C\/strong\u003E, \u003Cstrong\u003ESELECT\u003C\/strong\u003E and \u003Cstrong\u003ESHOW DATABASES\u003C\/strong\u003E. It can't destroy anything so no worries.\u003C\/p\u003E\n\n\u003Cp\u003EFirst, the script defines the variables, which are username, password and where files should end up. Then pull all the databases from the MySQL server to $databases and break it with for loop to $db. Now the script knows the names of the databases.\u003C\/p\u003E\n\n\u003Cp\u003EIf the database is not \u003Cstrong\u003Einformation_schema\u003C\/strong\u003E or start with \u003Cstrong\u003E_\u003C\/strong\u003E then use mysqldump to print the content of the database to .\u003Cstrong\u003Esql\u003C\/strong\u003E file. After that's done, compress it with \u003Cstrong\u003Egzip\u003C\/strong\u003E. The script does this separately for each database.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E#!\/bin\/bash\nUSER=\"backup\"\nPASSWORD=\"L63?aJbR6sFq-LuqNK\"\nOUTPUT=\"\/backup\/db\"\ndatabases=`mysql --user=$USER --password=$PASSWORD -e \"SHOW DATABASES;\" | tr -d \"| \" | grep -v Database`\nfor db in $databases; do\n if [[ \"$db\" != \"information_schema\" ]] && [[ \"$db\" != _* ]] ; then\n mysqldump --force --opt --user=$USER --password=$PASSWORD --databases $db > $OUTPUT\/$db-`date +%Y%m%d`.sql\n gzip $OUTPUT\/$db-`date +%Y%m%d`.sql\n fi\ndone\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EBackup all important files\u003C\/h2\u003E\n\n\u003Cp\u003EThe files are not as important as the database, they take up more space, and they are changed less, so I back up those only once per week. I have always two backups available. This script compresses my wwwroot and put the file to the right location.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E!\/bin\/bash\ntar -zcvf \"\/backup\/files\/www-$(date '+%F').tar.gz\" \/wwwroot\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EHow to schedule a backup\u003C\/h2\u003E\n\n\u003Cp\u003ECron is very powerful tool, and I use that to schedule my backups. Cron enables execute commands or scripts automatically at a specified time\/date.\u003C\/p\u003E\n\n\u003Cp\u003EAn entry in cron is made up of a series of fields separated by a space. Cron timing: minute 0-59, hour 0-23, day of month 1-31, month 1-12, day of week 0-6. The first script is run daily at 00:00, the second one is run 23:55 every Friday. The null device is typically used for disposing of unwanted output streams of a process (meaning no one cares what scripts want to tell).\u003C\/p\u003E\n\n\u003Cp\u003ETo command line:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ecrontab -e\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EEdit crontab:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E0 0 * * * \/root\/backup-db > \/dev\/null 2>&1\n55 11 * * Fri \/root\/backup-files > \/dev\/null 2>&1\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EWhat is running:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ecrontab -l\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EOther examples:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E15 0 *\/3 * * Every third day 15 min past midnight.\n15 0 3 * * Every third day of month.\n15 0 3 3 * Every third day of third month.\n15 *\/6 * * * Every sixth hour.\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EHow to delete old files automatically on Linux\u003C\/h2\u003E\n\n\u003Cp\u003EI don't want to keep all backups forever, so this script deletes files older than two weeks. Remember to change the folder. Add this line with scripts above.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Efind \/backup\/files\/* -mtime +14 -type f -delete\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThanks for reading and happy backuping!\u003C\/p\u003E"
	},
	"animatedsmoothscrollingeffect": {
		"title": "Animated smooth scrolling effect",
		"url": "animated-smooth-scrolling-effect",
		"pub1": "Apr 4, 2016",
		"pub2": "2016-04-04",
		"desc": "Every one-page website needs animated smooth scrolling effect, and this script will rock your site.",
		"body": "\u003Cp\u003EEvery one-page website needs animated smooth scrolling effect, and this script will rock your site. The script hijacks all # links and make them scroll nicely to target id.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E<script>\n$(function() {\n $('a[href*=\"#\"]:not([href=\"#\"])').click(function() {\n if (location.pathname.replace(\/^\\\/\/,'') == this.pathname.replace(\/^\\\/\/,'') && location.hostname == this.hostname) {\n var target = $(this.hash);\n target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\n if (target.length) {\n $('html, body').animate({\n scrollTop: target.offset().top\n }, 1000);\n return false;\n }\n }\n });\n});\n<\/script>\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EI didn't make this script, but I hope to keep it safe for me and all you.\u003C\/p\u003E\n\n\u003Ch3\u003EReferences\u003C\/h3\u003E\n\n\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"http:\/\/www.learningjquery.com\/2007\/10\/improved-animated-scrolling-script-for-same-page-links\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EImproved Animated Scrolling Script for Same-Page Links\u003C\/a\u003E\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"https:\/\/css-tricks.com\/snippets\/jquery\/smooth-scrolling\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ESmooth Scrolling\u003C\/a\u003E\u003C\/li\u003E\n\u003C\/ul\u003E"
	},
	"addorremoveclasswithjquerybasedonverticalscroll": {
		"title": "Add or remove class on vertical scroll",
		"url": "add-or-remove-class-with-jquery-based-on-vertical-scroll",
		"pub1": "Mar 3, 2016",
		"pub2": "2016-03-03",
		"desc": "A tutorial to show how use JavaScript and CSS to change appearance of when scrolling down on the website.",
		"body": "\u003Cp\u003EI often use \u003Cstrong\u003EJavaScript\u003C\/strong\u003E to change appearance of \u003Cstrong\u003E<header>\u003C\/strong\u003E when scrolling down on the website. I like to make it smaller after certain pixel amount. The best way to do that is change a class name for <header> element with JavaScript. You need to load \u003Cstrong\u003EJQuery\u003C\/strong\u003E before this script to make it work.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E<script>\n$(window).scroll(function() {\n if ($(this).scrollTop() > 150){\n $('header').addClass(\"small\");\n } else {\n $('header').removeClass(\"small\");\n }\n});\n<\/script>\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThis code calls the \u003Cstrong\u003E.scroll() JavaScript event\u003C\/strong\u003E and then use \u003Cstrong\u003E.scrollTop()\u003C\/strong\u003E to check if there are more than 150 pixels from top of the browser. If there is more, add a new class name small to the header element. If there are less pixels than 150, remove the class name from the element.\u003C\/p\u003E\n\n\u003Cp\u003EThen just add extra CSS styles for \u003Cstrong\u003Eheader.small\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eheader { height: 50px }\nheader .menu a { height: 1.2em }\n.small { height: 25px }\n.small .menu a { height: 1em }\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ESo simple but still so powerful. :)\u003C\/p\u003E"
	},
	"addimagestodrupalviewssearchpage": {
		"title": "Add images to Drupal 7 Views Search Page",
		"url": "add-images-to-drupal-views-search-page",
		"pub1": "Mar 3, 2016",
		"pub2": "2016-03-03",
		"desc": "Drupal Views is a powerful tool for all kind of mixed results but how to add images to Views' Page when url have '?'. Blocks can't help you, but PHP can.",
		"body": "\u003Cp\u003EI had a problem how to print big hero images to custom made search page (\u003Ca href=\"https:\/\/www.drupal.org\/project\/views\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EDrupal Views\u003C\/a\u003E) only for certain search results. \u003Ca href=\"https:\/\/www.drupal.org\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EDrupal\u003C\/a\u003E's blocks do not understand urls with \u003Cstrong\u003E?\u003C\/strong\u003E so that option was out. The answer was very simple and my saviour was once again PHP. I added \u003Cstrong\u003EGlobal: PHP\u003C\/strong\u003E field to View's Header section.\u003C\/p\u003E\n\n\u003Cp\u003EI use Drupal's term reference fields as features for Products (Drupal Commerce) and Brand is one of them. First, I wanted to know if the search page result is \"brand only\". Those images should be visible only when there is only one brand name selected and nothing else.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E<?php\nif(isset($_GET['field_brand_tid'])) {\n if(count($_GET) == 2 AND count($_GET['field_brand_tid']) == 1){\n $i = $_GET['field_brand_tid'][0];\n $term = taxonomy_term_load($i);\n $term = $term->name;\n $term = strtolower($term);\n $term = preg_replace('\/\\s+\/', '', $term);\n echo \"<img src='\/sites\/all\/themes\/themename\/brand\/$term.jpg' alt=''\/>\";\n }\n}\n?>\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003E\u003Cstrong\u003Evar_dump($_GET)\u003C\/strong\u003E gives something like this:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Earray(2) { [\"field_brand_tid\"]=> array(1) { [0]=> string(1) \"1\" } [\"q\"]=> string(4) \"search\" }\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EFirst, there has to be at least one brand selected, if none found then this code is not executed. Then I want to know how many $_GET results there is because there can be only two; one for search (q) and one for the brand. After that we can check out the ID and the name of the brand and fix the name for the file name. strtolower makes the name lowecase and preg_replace removes all spaces. Now everything is ready for printing.\u003C\/p\u003E\n\n\u003Cp\u003EI really enjoyed this little challenge and big thanks for \u003Ca href=\"https:\/\/www.linkedin.com\/in\/joonaskolkka\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EJoonas\u003C\/a\u003E from \u003Ca href=\"https:\/\/www.comspot.fi\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EComspot\u003C\/a\u003E for helping me out.\u003C\/p\u003E"
	},
	"the10mostcommonmistakesthatphpdevelopersmake": {
		"title": "The 10 most common mistakes with PHP",
		"url": "the-10-most-common-mistakes-that-php-developers-make",
		"pub1": "Feb 2, 2016",
		"pub2": "2016-02-02",
		"desc": "Are you guilty of one of these common PHP mistakes? Refer to this list next time you’re debugging PHP code.",
		"body": "\u003Cp\u003EPHP makes it relatively easy to build a web-based system, which is much of the reason for its popularity. But its ease of use notwithstanding, PHP has evolved into quite a sophisticated language with many frameworks, nuances, and subtleties that can bite developers, leading to hours of hair-pulling debugging. This article highlights ten of the more common mistakes that PHP developers need to beware of.\u003C\/p\u003E\n\n\u003Ch2\u003ECommon Mistake #1: Leaving dangling array references after foreach loops\u003C\/h2\u003E\n\n\u003Cp\u003ENot sure how to use foreach loops in PHP? Using references in foreach loops can be useful if you want to operate on each element in the array that you are iterating over. For example:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$arr = array(1, 2, 3, 4);\nforeach ($arr as &$value) {\n $value = $value * 2;\n}\n\/\/ $arr is now array(2, 4, 6, 8)\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThe problem is that, if you\u2019re not careful, this can also have some undesirable side effects and consequences. Specifically, in the above example, after the code is executed, $value will remain in scope and will hold a reference to the last element in the array. Subsequent operations involving $value could therefore unintentionally end up modifying the last element in the array.\u003C\/p\u003E\n\n\u003Cp\u003EThe main thing to remember is that foreach does not create a scope. Thus, $value in the above example is a reference within the top scope of the script. On each iteration foreach sets the reference to point to the next element of $array. After the loop completes, therefore, $value still points to the last element of $array and remains in scope.\u003C\/p\u003E\n\n\u003Cp\u003EHere\u2019s an example of the kind of evasive and confusing bugs that this can lead to:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$array = [1, 2, 3];\necho implode(',', $array), \"\\n\";\n\nforeach ($array as &$value) {} \/\/ by reference\necho implode(',', $array), \"\\n\";\n\nforeach ($array as $value) {} \/\/ by value (i.e., copy)\necho implode(',', $array), \"\\n\";\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThe above code will output the following:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E1,2,3\n1,2,3\n1,2,2\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENo, that\u2019s not a typo. The last value on the last line is indeed a 2, not a 3.\u003C\/p\u003E\n\n\u003Ch3\u003EWhy?\u003C\/h3\u003E\n\n\u003Cp\u003EAfter going through the first foreach loop, $array remains unchanged but, as explained above, $value is left as a dangling reference to the last element in $array (since that foreach loop accessed $value by reference).\u003C\/p\u003E\n\n\u003Cp\u003EAs a result, when we go through the second foreach loop, \u201cweird stuff\u201d appears to happen. Specifically, since $value is now being accessed by value (i.e., by copy), foreach copies each sequential $arrayelement into $value in each step of the loop. As a result, here\u2019s what happens during each step of the second foreach loop:\u003C\/p\u003E\n\n\u003Cp\u003E-Pass 1: Copies $array[0] (i.e., \u201c1\u201d) into $value (which is a reference to $array[2]), so $array[2] now equals 1. So $array now contains [1, 2, 1].\u003Cbr \/\u003E\n-Pass 2: Copies $array[1] (i.e., \u201c2\u201d) into $value (which is a reference to $array[2]), so $array[2] now equals 2. So $array now contains [1, 2, 2].\u003Cbr \/\u003E\n-Pass 3: Copies $array[2] (which now equals \u201c2\u201d) into $value (which is a reference to $array[2]), so $array[2] still equals 2. So $array now contains [1, 2, 2].\u003C\/p\u003E\n\n\u003Cp\u003ETo still get the benefit of using references in foreach loops without running the risk of these kinds of problems, call unset() on the variable, immediately after the foreach loop, to remove the reference; e.g.:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$arr = array(1, 2, 3, 4);\nforeach ($arr as &$value) {\n $value = $value * 2;\n}\nunset($value); \/\/ $value no longer references $arr[3]\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ECommon Mistake #2: Misunderstanding isset() behavior\u003C\/h2\u003E\n\n\u003Cp\u003EDespite its name, isset() not only returns false if an item does not exist, but also returns false for nullvalues.\u003C\/p\u003E\n\n\u003Cp\u003EThis behavior is more problematic than it might appear at first and is a common source of problems.\u003C\/p\u003E\n\n\u003Cp\u003EConsider the following:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$data = fetchRecordFromStorage($storage, $identifier);\nif (!isset($data['keyShouldBeSet']) {\n \/\/ do something here if 'keyShouldBeSet' is not set\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThe author of this code presumably wanted to check if keyShouldBeSet was set in $data. But, as discussed, isset($data['keyShouldBeSet']) will also return false if $data['keyShouldBeSet'] was set, but was set to null. So the above logic is flawed.\u003C\/p\u003E\n\n\u003Cp\u003EHere\u2019s another example:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eif ($_POST['active']) {\n $postData = extractSomething($_POST);\n}\n\/\/ ...\nif (!isset($postData)) {\n echo 'post not active';\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThe above code assumes that if $_POST['active'] returns true, then postData will necessarily be set, and therefore isset($postData) will return true. So conversely, the above code assumes that the only way that isset($postData) will return false is if $_POST['active'] returned false as well.\u003C\/p\u003E\n\n\u003Cp\u003ENot.\u003C\/p\u003E\n\n\u003Cp\u003EAs explained, isset($postData) will also return false if $postData was set to null. It therefore is possible for isset($postData) to return false even if $_POST['active'] returned true. So again, the above logic is flawed.\u003C\/p\u003E\n\n\u003Cp\u003EAnd by the way, as a side point, if the intent in the above code really was to again check if $_POST['active']returned true, relying on isset() for this was a poor coding decision in any case. Instead, it would have been better to just recheck $_POST['active']; i.e.:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eif ($_POST['active']) {\n $postData = extractSomething($_POST);\n}\n\/\/ ...\nif ($_POST['active']) {\n echo 'post not active';\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EFor cases, though, where it is important to check if a variable was really set (i.e., to distinguish between a variable that wasn\u2019t set and a variable that was set to null), the array_key_exists() method is a much more robust solution.\u003C\/p\u003E\n\n\u003Cp\u003EFor example, we could rewrite the first of the above two examples as follows:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$data = fetchRecordFromStorage($storage, $identifier);\nif (! array_key_exists('keyShouldBeSet', $data)) {\n \/\/ do this if 'keyShouldBeSet' isn't set\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EMoreover, by combining array_key_exists() with get_defined_vars(), we can reliably check whether a variable within the current scope has been set or not:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eif (array_key_exists('varShouldBeSet', get_defined_vars())) {\n \/\/ variable $varShouldBeSet exists in current scope\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ECommon Mistake #3: Confusion about returning by reference vs. by value\u003C\/h2\u003E\n\n\u003Cp\u003EConsider this code snippet:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eclass Config {\n private $values = [];\n public function getValues() {\n return $this->values;\n }\n}\n$config = new Config();\n$config->getValues()['test'] = 'test';\necho $config->getValues()['test'];\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you run the above code, you\u2019ll get the following:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EPHP Notice: Undefined index: test in \/path\/to\/my\/script.php on line 21\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch3\u003EWhat\u2019s wrong?\u003C\/h3\u003E\n\n\u003Cp\u003EThe issue is that the above code confuses returning arrays by reference with returning arrays by value. Unless you explicitly tell PHP to return an array by reference (i.e., by using&), PHP will by default return the the array \u201cby value\u201d. This means that a copy of the array will be returned and therefore the called function and the caller will not be accessing the same instance of the array.\u003C\/p\u003E\n\n\u003Cp\u003ESo the above call to getValues() returns a copy of the $values array rather than a reference to it. With that in mind, let\u2019s revisit the two key lines from the above the example:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ getValues() returns a COPY of the $values array, so this adds a 'test' element\n\/\/ to a COPY of the $values array, but not to the $values array itself.\n$config->getValues()['test'] = 'test';\n\n\/\/ getValues() again returns ANOTHER COPY of the $values array, and THIS copy doesn't\n\/\/ contain a 'test' element (which is why we get the \"undefined index\" message).\necho $config->getValues()['test'];\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EOne possible fix would be to save the first copy of the $values array returned by getValues() and then operate on that copy subsequently; e.g.:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$vals = $config->getValues();\n$vals['test'] = 'test';\necho $vals['test'];\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThat code will work fine (i.e., it will output test without generating any \u201cundefined index\u201d message), but depending on what you\u2019re trying to accomplish, this approach may or may not be adequate. In particular, the above code will not modify the original $values array. So if you do want your modifications (such as adding a \u2018test\u2019 element) to affect the original array, you would instead need to modify the getValues() function to return a reference to the $values array itself. This is done by adding a & before the function name, thereby indicating that it should return a reference; i.e.:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eclass Config{\n private $values = [];\n \/\/ return a REFERENCE to the actual $values array\n public function &getValues() {\n return $this->values;\n }\n}\n\n$config = new Config();\n$config->getValues()['test'] = 'test';\necho $config->getValues()['test'];\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThe output of this will be test, as expected.\u003C\/p\u003E\n\n\u003Cp\u003EBut to make things more confusing, consider instead the following code snippet:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eclass Config{\n private $values;\n \/\/ using ArrayObject rather than array\n public function __construct() {\n $this->values = new ArrayObject();\n }\n public function getValues() {\n return $this->values;\n }\n}\n\n$config = new Config();\n$config->getValues()['test'] = 'test';\necho $config->getValues()['test'];\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you guessed that this would result in the same \u201cundefined index\u201d error as our earlier array example, you were wrong. In fact, this code will work just fine. The reason is that, unlike arrays, PHP always passes objects by reference. (ArrayObject is an SPL object, which fully mimics arrays usage, but works as an object.)\u003C\/p\u003E\n\n\u003Cp\u003EAs these examples demonstrate, it is not always entirely obvious in PHP whether you are dealing with a copy or a reference. It is therefore essential to understand these default behaviors (i.e., variables and arrays are passed by value; objects are passed by reference) and also to carefully check the API documentation for the function you are calling to see if it is returning a value, a copy of an array, a reference to an array, or a reference to an object.\u003C\/p\u003E\n\n\u003Cp\u003EAll that said, it is important to note that the practice of returning a reference to an array or an ArrayObject is generally something that should be avoided, as it provides the caller with the ability to modify the instance\u2019s private data. This \u201cflies in the face\u201d of encapsulation. Instead, it\u2019s better to use old style \u201cgetters\u201d and \u201csetters\u201d, e.g.:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eclass Config{\n private $values = [];\n public function setValue($key, $value) {\n $this->values[$key] = $value;\n }\n public function getValue($key) {\n return $this->values[$key];\n }\n}\n\n$config = new Config();\n$config->setValue('testKey', 'testValue');\necho $config->getValue('testKey'); \/\/ echos 'testValue'\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThis approach gives the caller the ability to set or get any value in the array without providing public access to the otherwise-private $values array itself.\u003C\/p\u003E\n\n\u003Ch2\u003ECommon Mistake #4: Performing queries in a loop\u003C\/h2\u003E\n\n\u003Cp\u003EIt\u2019s not uncommon to come across something like this if your PHP is not working:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$models = [];\nforeach ($inputValues as $inputValue) {\n $models[] = $valueRepository->findByValue($inputValue);\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EWhile there may be absolutely nothing wrong here, but if you follow the logic in the code, you may find that the innocent looking call above to $valueRepository->findByValue() ultimately results in a query of some sort, such as:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$result = $connection->query(\"SELECT `x`,`y` FROM `values` WHERE `value`=\" . $inputValue);\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EAs a result, each iteration of the above loop would result in a separate query to the database. So if, for example, you supplied an array of 1,000 values to the loop, it would generate 1,000 separate queries to the resource! If such a script is called in multiple threads, it could potentially bring the system to a grinding halt.\u003C\/p\u003E\n\n\u003Cp\u003EIt\u2019s therefore crucial to recognize when queries are being made by your code and, whenever possible, gather the values and then run one query to fetch all the results.\u003C\/p\u003E\n\n\u003Cp\u003EOne example of a fairly common place to encounter querying being done inefficiently (i.e., in a loop) is when a form is posted with a list of values (IDs, for example). Then, to retrieve the full record data for each of the IDs, the code will loop through the array and do a separate SQL query for each ID. This will often look something like this:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$data = [];\nforeach ($ids as $id) {\n $result = $connection->query(\"SELECT `x`, `y` FROM `values` WHERE `id` = \" . $id);\n $data[] = $result->fetch_row();\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EBut the same thing can be accomplished much more efficiently in a single SQL query as follows:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$data = [];\nif (count($ids)) {\n $result = $connection->query(\"SELECT `x`, `y` FROM `values` WHERE `id` IN (\" . implode(',', $ids));\n while ($row = $result->fetch_row()) {\n $data[] = $row;\n }\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIt\u2019s therefore crucial to recognize when queries are being made, either directly or indirectly, by your code. Whenever possible, gather the values and then run one query to fetch all the results. Yet caution must be exercised there as well, which leads us to our next common PHP mistake\u2026\u003C\/p\u003E\n\n\u003Cp\u003ECommon Mistake #5: Memory usage headfakes and inefficiencies\u003Cbr \/\u003E\nWhile fetching many records at once is definitely more efficient than running a single query for each row to fetch, such an approach can potentially lead to an \u201cout of memory\u201d condition in libmysqlclient when using PHP\u2019s mysql extension.\u003C\/p\u003E\n\n\u003Cp\u003ETo demonstrate, let\u2019s take a look at a test box with limited resources (512MB RAM), MySQL, and php-cli.\u003C\/p\u003E\n\n\u003Cp\u003EWe\u2019ll bootstrap a database table like this:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ connect to mysql\n$connection = new mysqli('localhost', 'username', 'password', 'database');\n\/\/ create table of 400 columns\n$query = 'CREATE TABLE `test`(`id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT';\nfor ($col = 0; $col < 400; $col++) {\n $query .= \", `col$col` CHAR(10) NOT NULL\";\n}\n$query .= ');';\n$connection->query($query);\n\n\/\/ write 2 million rows\nfor ($row = 0; $row < 2000000; $row++) {\n$query = \"INSERT INTO `test` VALUES ($row\";\n for ($col = 0; $col < 400; $col++) {\n $query .= ', ' . mt_rand(1000000000, 9999999999);\n }\n $query .= ')';\n $connection->query($query);\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EOK, now let\u2019s check resources usage:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ connect to mysql\n$connection = new mysqli('localhost', 'username', 'password', 'database');\necho \"Before: \" . memory_get_peak_usage() . \"\\n\";\n\n$res = $connection->query('SELECT `x`,`y` FROM `test` LIMIT 1');\necho \"Limit 1: \" . memory_get_peak_usage() . \"\\n\";\n\n$res = $connection->query('SELECT `x`,`y` FROM `test` LIMIT 10000');\necho \"Limit 10000: \" . memory_get_peak_usage() . \"\\n\";\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EOutput:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EBefore: 224704\nLimit 1: 224704\nLimit 10000: 224704\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ECool. Looks like the query is safely managed internally in terms of resources.\u003C\/p\u003E\n\n\u003Cp\u003EJust to be sure, though, let\u2019s boost the limit one more time and set it to 100,000. Uh-oh. When we do that, we get:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EPHP Warning: mysqli::query(): (HY000\/2013):\nLost connection to MySQL server during query in \/root\/test.php on line 11\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch3\u003EWhat happened?\u003C\/h3\u003E\n\n\u003Cp\u003EThe issue here is the way PHP\u2019s mysql module works. It\u2019s really just a proxy for libmysqlclient, which does the dirty work. When a portion of data is selected, it goes directly into memory. Since this memory is not managed by PHP\u2019s manager, memory_get_peak_usage() won\u2019t show any increase in resources utilization as we up the limit in our query. This leads to problems like the one demonstrated above where we\u2019re tricked into complacency thinking that our memory management is fine. But in reality, our memory management is seriously flawed and we can experience problems like the one shown above.\u003C\/p\u003E\n\n\u003Cp\u003EYou can at least avoid the above headfake (although it won\u2019t itself improve your memory utilization) by instead using the mysqlnd module. mysqlnd is compiled as a native PHP extension and it does use PHP\u2019s memory manager.\u003C\/p\u003E\n\n\u003Cp\u003ETherefore, if we run the above test using mysqlnd rather than mysql, we get a much more realistic picture of our memory utilization:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EBefore: 232048\nLimit 1: 324952\nLimit 10000: 32572912\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EAnd it\u2019s even worse than that, by the way. According to PHP documentation, mysql uses twice as many resources as mysqlnd to store data, so the original script using mysql really used even more memory than shown here (roughly twice as much).\u003C\/p\u003E\n\n\u003Cp\u003ETo avoid such problems, consider limiting the size of your queries and using a loop with small number of iterations; e.g.:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$totalNumberToFetch = 10000;\n$portionSize = 100;\nfor ($i = 0; $i <= ceil($totalNumberToFetch \/ $portionSize); $i++) {\n $limitFrom = $portionSize * $i;\n $res = $connection->query(\n \"SELECT `x`,`y` FROM `test` LIMIT $limitFrom, $portionSize\"\n );\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EWhen we consider both this PHP mistake and mistake #4 above, we realize that there is a healthy balance that your code ideally needs to achieve between, on the one hand, having your queries being too granular and repetitive, vs. having each of your individual queries be too large. As is true with most things in life, balance is needed; either extreme is not good and can cause problems with PHP not working properly.\u003C\/p\u003E\n\n\u003Ch2\u003ECommon Mistake #6: Ignoring Unicode\/UTF-8 issues\u003C\/h2\u003E\n\n\u003Cp\u003EIn some sense, this is really more of an issue in PHP itself than something you would run into while debugging PHP, but it has never been adequately addressed. PHP 6\u2019s core was to be made Unicode-aware, but that was put on hold when development of PHP 6 was suspended back in 2010.\u003C\/p\u003E\n\n\u003Cp\u003EBut that by no means absolves the developer from [properly handing UTF-8](http:\/\/www.toptal.com\/php\/a-utf-8-primer-for-php-and-mysql){:target=\"_blank\"} and avoiding the erroneous assumption that all strings will necessarily be \u201cplain old ASCII\u201d. Code that fails to properly handle non-ASCII strings is notorious for introducing gnarly [heisenbugs](http:\/\/en.wikipedia.org\/wiki\/Heisenbug){:target=\"_blank\"} into your code. Even simple strlen($_POST['name'])calls could cause problems if someone with a last name like \u201cSchr\u00f6dinger\u201d tried to sign up into your system.\u003C\/p\u003E\n\n\u003Cp\u003EHere\u2019s a small checklist to avoid such problems in your code:\u003C\/p\u003E\n\n\u003Cul\u003E\u003Cli\u003EIf you don\u2019t know much about Unicode and UTF-8, you should at least learn the basics. There\u2019s a great primer [here](http:\/\/www.joelonsoftware.com\/articles\/Unicode.html){:target=\"_blank\"}.\u003C\/li\u003E\n\t\u003Cli\u003EBe sure to always use the mb_* functions instead of the old string functions (make sure the \u201cmultibyte\u201d extension is included in your PHP build).\u003C\/li\u003E\n\t\u003Cli\u003EMake sure your database and tables are set to use Unicode (many builds of MySQL still use latin1 by default).\u003C\/li\u003E\n\t\u003Cli\u003ERemember that json_encode() converts non-ASCII symbols (e.g., \u201cSchr\u00f6dinger\u201d becomes \u201cSchr\\u00f6dinger\u201d) but serialize() does not.\u003C\/li\u003E\n\t\u003Cli\u003EMake sure your PHP code files are also UTF-8 encoded to avoid collisions when concatenating strings with hardcoded or configured string constants.\u003C\/li\u003E\n\u003C\/ul\u003E\u003Ch2\u003ECommon Mistake #7: Assuming $_POST will always contain your POST data\u003C\/h2\u003E\n\n\u003Cp\u003EDespite its name, the $_POST array won\u2019t always contain your POST data and can be easily found empty. To understand this, let\u2019s take a look at an example. Assume we make a server request with a jQuery.ajax() call as follows:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ js\n$.ajax({\nurl: 'http:\/\/my.site\/some\/path',\nmethod: 'post',\ndata: JSON.stringify({a: 'a', b: 'b'}),\ncontentType: 'application\/json'\n});\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003E(Incidentally, note the contentType: 'application\/json' here. We send data as JSON, which is quite popular for APIs. It\u2019s the default, for example, for posting in the AngularJS $http service.)\u003C\/p\u003E\n\n\u003Cp\u003EOn the server side of our example, we simply dump the $_POST array:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ php\nvar_dump($_POST);\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ESurprisingly, the result will be:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Earray(0) { }\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch3\u003EWhy? What happened to our JSON string {a: 'a', b: 'b'}?\u003C\/h3\u003E\n\n\u003Cp\u003EThe answer is that PHP only parses a POST payload automatically when it has a content type of application\/x-www-form-urlencoded or multipart\/form-data. The reasons for this are historical \u2014 these two content types were essentially the only ones used years ago when PHP\u2019s $_POST was implemented. So with any other content type (even those that are quite popular today, like application\/json), PHP doesn\u2019t automatically load the POST payload.\u003C\/p\u003E\n\n\u003Cp\u003ESince $_POST is a superglobal, if we override it once (preferably early in our script), the modified value (i.e., including the POST payload) will then be referenceable throughout our code. This is important since $_POSTis commonly used by PHP frameworks and almost all custom scripts to extract and transform request data.\u003C\/p\u003E\n\n\u003Cp\u003ESo, for example, when processing a POST payload with a content type of application\/json, we need to manually parse the request contents (i.e., decode the JSON data) and override the $_POST variable, as follows:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ php\n$_POST = json_decode(file_get_contents('php:\/\/input'), true);\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThen when we dump the $_POST array, we see that it correctly includes the POST payload; e.g.:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Earray(2) { [\"a\"]=> string(1) \"a\" [\"b\"]=> string(1) \"b\" }\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ECommon Mistake #8: Thinking that PHP supports a character data type\u003C\/h2\u003E\n\n\u003Cp\u003ELook at this sample piece of code and try guessing what it will print:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Efor ($c = 'a'; $c <= 'z'; $c++) { echo $c . \"\\n\"; }\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you answered \u2018a\u2019 through \u2018z\u2019, you may be surprised to know that you were wrong.\u003C\/p\u003E\n\n\u003Cp\u003EYes, it will print \u2018a\u2019 through \u2018z\u2019, but then it will also print \u2018aa\u2019 through \u2018yz\u2019. Let\u2019s see why.\u003C\/p\u003E\n\n\u003Cp\u003EIn PHP there\u2019s no char datatype; only string is available. With that in mind, incrementing the string z in PHP yields aa:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ephp> $c = 'z'; echo ++$c . \"\\n\"; aa\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYet to further confuse matters, aa is lexicographically less than z:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ephp> var_export((boolean)('aa' < 'z')) . \"\\n\"; true\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThat\u2019s why the sample code presented above prints the letters a through z, but then also prints aathrough yz. It stops when it reachs za, which is the first value it encounters that it \u201cgreater than\u201d z:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ephp> var_export((boolean)('za' < 'z')) . \"\\n\"; false\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThat being the case, here\u2019s one way to properly loop through the values \u2018a\u2019 through \u2018z\u2019 in PHP:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Efor ($i = ord('a'); $i <= ord('z'); $i++) { echo chr($i) . \"\\n\"; }\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EOr alternatively:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$letters = range('a', 'z');\nfor ($i = 0; $i < count($letters); $i++) {\n echo $letters[$i] . \"\\n\";\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ECommon Mistake #9: Ignoring coding standards\u003C\/h2\u003E\n\n\u003Cp\u003EAlthough ignoring coding standards doesn\u2019t directly lead to needing to debug PHP code, it is still probably one of the most important things to discuss here.\u003C\/p\u003E\n\n\u003Cp\u003EIgnoring coding standards can cause a whole slew of problems on a project. At best, it results in code that is inconsistent (since every developer is \u201cdoing their own thing\u201d). But at worst, it produces PHP code that does not work or can be difficult (sometimes almost impossible) to navigate, making it extremely difficult to debug, enhance, maintain. And that means reduced productivity for your team, including lots of wasted (or at least unnecessary) effort.\u003C\/p\u003E\n\n\u003Cp\u003EFortunately for PHP developers, there is the PHP Standards Recommendation (PSR), comprised of the following five standards:\u003C\/p\u003E\n\n\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"http:\/\/www.php-fig.org\/psr\/psr-0\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EPSR-0\u003C\/a\u003E: Autoloading Standard\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\/\/www.php-fig.org\/psr\/psr-1\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EPSR-1\u003C\/a\u003E: Basic Coding Standard\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\/\/www.php-fig.org\/psr\/psr-2\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EPSR-2\u003C\/a\u003E: Coding Style Guide\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\/\/www.php-fig.org\/psr\/psr-3\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EPSR-3\u003C\/a\u003E: Logger Interface\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\/\/www.php-fig.org\/psr\/psr-4\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EPSR-4\u003C\/a\u003E: Autoloader\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cp\u003EPSR was originally created based on inputs from maintainers of the most recognized platforms on the market. Zend, Drupal, Symfony, Joomla and others contributed to these standards, and are now following them. Even PEAR, which attempted to be a standard for years before that, participates in PSR now.\u003C\/p\u003E\n\n\u003Cp\u003EIn some sense, it almost doesn\u2019t matter what your coding standard is, as long as you agree on a standard and stick to it, but following the PSR is generally a good idea unless you have some compelling reason on your project to do otherwise. More and more teams and projects are conforming with the PSR. Tt\u2019s definitely recognized at this point as \u201cthe\u201d standard by the majority of PHP developers, so using it will help ensure that new developers are familiar and comfortable with your coding standard when they join your team.\u003C\/p\u003E\n\n\u003Ch2\u003ECommon Mistake #10: Misusing empty()\u003C\/h2\u003E\n\n\u003Cp\u003ESome PHP developers like using empty() for boolean checks for just about everything. There are case, though, where this can lead to confusion.\u003C\/p\u003E\n\n\u003Cp\u003EFirst, let\u2019s come back to arrays and ArrayObject instances (which mimic arrays). Given their similarity, it\u2019s easy to assume that arrays and ArrayObject instances will behave identically. This proves, however, to be a dangerous assumption. For example, in PHP 5.0:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ PHP 5.0 or later:\n$array = [];\nvar_dump(empty($array)); \/\/ outputs bool(true)\n$array = new ArrayObject();\nvar_dump(empty($array)); \/\/ outputs bool(false)\n\/\/ why don't these both produce the same output?\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EAnd to make matters even worse, the results would have been different prior to PHP 5.0:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ Prior to PHP 5.0:\n$array = [];\nvar_dump(empty($array)); \/\/ outputs bool(false)\n$array = new ArrayObject();\nvar_dump(empty($array)); \/\/ outputs bool(false)\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThis approach is unfortunately quite popular. For example, this is the way Zend\\Db\\TableGateway of Zend Framework 2 returns data when calling current() on TableGateway::select() result as the doc suggests. Developer can easily become victim of this mistake with such data.\u003C\/p\u003E\n\n\u003Cp\u003ETo avoid these issues, the better approach to checking for empty array structures is to use count():\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E\/\/ Note that this work in ALL versions of PHP (both pre and post 5.0):\n$array = [];\nvar_dump(count($array)); \/\/ outputs int(0)\n$array = new ArrayObject();\nvar_dump(count($array)); \/\/ outputs int(0)\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EAnd incidentally, since PHP casts 0 to false, count() can also be used within if () conditions to check for empty arrays. It\u2019s also worth noting that, in PHP, count() is constant complexity (O(1) operation) on arrays, which makes it even clearer that it\u2019s the right choice.\u003C\/p\u003E\n\n\u003Cp\u003EAnother example when empty() can be dangerous is when combining it with the magic class function __get(). Let\u2019s define two classes and have a test property in both.\u003C\/p\u003E\n\n\u003Cp\u003EFirst let\u2019s define a Regular class that includes test as a normal property:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eclass Regular { public $test = 'value'; }\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThen let\u2019s define a Magic class that uses the magic __get() operator to access its test property:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eclass Magic {\n private $values = ['test' => 'value'];\n public function __get($key) {\n if (isset($this->values[$key])) {\n return $this->values[$key];\n }\n}}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EOK, now let\u2019s see what happens when we attempt to access the test property of each of these classes:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$regular = new Regular();\nvar_dump($regular->test); \/\/ outputs string(4) \"value\"\n$magic = new Magic();\nvar_dump($magic->test); \/\/ outputs string(4) \"value\"\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EFine so far.\u003C\/p\u003E\n\n\u003Cp\u003EBut now let\u2019s see what happens when we call empty() on each of these:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Evar_dump(empty($regular->test)); \/\/ outputs bool(false)\nvar_dump(empty($magic->test)); \/\/ outputs bool(true)\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EUgh. So if we rely on empty(), we can be misled into believing that the test property of $magic is empty, whereas in reality it is set to 'value'.\u003C\/p\u003E\n\n\u003Cp\u003EUnfortunately, if a class uses the magic __get() function to retrieve a property\u2019s value, there\u2019s no foolproof way to check if that property value is empty or not. Outside of the class\u2019 scope, you can really only check if a null value will be returned, and that doesn\u2019t necessarily mean that the corresponding key is not set, since it actually could have been set to null.\u003C\/p\u003E\n\n\u003Cp\u003EIn contrast, if we attempt to reference a non-existent property of a Regular class instance, we will get a notice similar to the following:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003ENotice: Undefined property: Regular::$nonExistantTest in \/path\/to\/test.php on line 10\nCall Stack:\n0.0012 234704 1. {main}() \/path\/to\/test.php:0\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ESo the main point here is that the empty() method should be used with care as it can lend itself to confusing \u2013 or even potentially misleading \u2013 results, if one is not careful.\u003C\/p\u003E\n\n\u003Ch2\u003EWrap-up\u003C\/h2\u003E\n\n\u003Cp\u003EPHP\u2019s ease of use can lull developers into a false sense of comfort, leaving themselves vulnerable to lengthy PHP debugging due to some of the nuances and idiosyncrasies of the language. This can result in PHP not working and problems such as those described herein.\u003C\/p\u003E\n\n\u003Cp\u003EThe PHP language has evolved significantly over the course of its 20 year history. Familiarizing oneself with its subtleties is a worthwhile endeavor, as it will help ensure that the software you produce is more scalable, robust, and maintainable.\u003C\/p\u003E\n\n\u003Cp\u003E\u003Ca class=\"bg-primary btn\" href=\"https:\/\/www.toptal.com\/php\/10-most-common-mistakes-php-programmers-make\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EOriginal content and the author\u003C\/a\u003E\u003C\/p\u003E"
	},
	"drush": {
		"title": "A beginner's guide to Drush",
		"url": "drush",
		"pub1": "Jan 1, 2016",
		"pub2": "2016-01-01",
		"desc": "Drush is a command-line shell and scripting interface for Drupal. This tutorial help you understand how Drush works and how it makes your life easier.",
		"body": "\u003Cp\u003E\u003Ca href=\"https:\/\/www.drush.org\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EDrush\u003C\/a\u003E is a command-line shell and scripting interface for \u003Ca href=\"https:\/\/www.drupal.org\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EDrupal\u003C\/a\u003E. It makes my life a lot easier because I don't have to manage all the websites from Drupal's admin pages, but I can give commands to the server's command line. It helps you perform admin tasks using one or few commands in the terminal.\u003C\/p\u003E\n\n\u003Cp\u003EYou need to \u003Ca href=\"https:\/\/en.wikipedia.org\/wiki\/Secure_Shell\" target=\"_blank\" title=\"Wikipedia: Secure Shell\" rel=\"noreferrer noopener\"\u003ESSH access\u003C\/a\u003E to your server and write all commands to the terminal. \u003Ca href=\"https:\/\/www.chiark.greenend.org.uk\/~sgtatham\/putty\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EPuTTY\u003C\/a\u003E is very good tool for Windows and OS X \/ Linux got their own terminal + ssh software so you can just start by making connect to your server. If you don't know how to use ssh then you probably don't want to play with drush.\u003C\/p\u003E\n\n\u003Ch2\u003EInstall drush\u003C\/h2\u003E\n\n\u003Cp\u003EDownload latest stable release using the code below:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ewget -O drush.phar https:\/\/github.com\/drush-ops\/drush-launcher\/releases\/download\/0.6.0\/drush.phar\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENo one likes to use long command like \"php drush.phar <drush_command>\" so let's make it work as normal commands. If you have \u003Cstrong\u003Esudo\u003C\/strong\u003E or \u003Cstrong\u003Eroot\u003C\/strong\u003E access to your server then copy \u003Cstrong\u003Edrush.phar\u003C\/strong\u003E to \u003Cstrong\u003E\/usr\/local\/bin\/\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Echmod +x drush.phar\nsudo mv drush.phar \/usr\/local\/bin\/drush\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you don't have special rights to a server, you can add \u003Cstrong\u003Eexport PATH=$PATH:<\/path\/to\/file>\u003C\/strong\u003E to your \u003Cstrong\u003E~\/.bashrc\u003C\/strong\u003E file (if your system use bash).\u003C\/p\u003E\n\n\u003Ch2\u003EDownload, enable and uninstall modules\u003C\/h2\u003E\n\n\u003Cp\u003EGo to your Drupal installation folder.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Ecd \/<your_drupal_folder>\/sites\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYou can download and enable any module from \u003Ca href=\"https:\/\/www.drupal.org\/project\/project_module\" target=\"_blank\" title=\"Official Drupal Modules\" rel=\"noreferrer noopener\"\u003EDrupal.org\u003C\/a\u003E and you can enable multiple modules at once.\u003C\/p\u003E\n\n\u003Cp\u003EI use this \"one liner\" to activate all the necessary modules for new site (Drush download the modules automatically):\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush en pathauto ckeditor views jquery_update module_filter transliteration l10n_update admin_menu admin_menu_toolbar imce less html5_tools menu_block views_ui ctools token libraries elements field_ui overlay image contextual taxonomy\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ECommand \"\u003Cstrong\u003Edrush en\u003C\/strong\u003E\" enable module. You can also only download modules without activating them by using \"\u003Cstrong\u003Edrush dl\u003C\/strong\u003E\" (pm-download).\u003C\/p\u003E\n\n\u003Cp\u003E\"\u003Cstrong\u003Edrush dis\u003C\/strong\u003E\" (pm-disable) is command to uninstall. Drush can't delete modules so you have to do that manually (\u003Cstrong\u003Erm -rf \/<your_drupal_folder>\/sites\/all\/modules\/<module>\u003C\/strong\u003E).\u003C\/p\u003E\n\n\u003Ch2\u003EUpdate Drupal with Drush\u003C\/h2\u003E\n\n\u003Cp\u003ESee main information and status of the site:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush status\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EBefore I found Drush it was a pain in ass upgrading Drupal core and all enabled modules. Now you can just write one simple command and watch how Drush do all the work for you.\u003C\/p\u003E\n\n\u003Cp\u003EUse command below to see all available updates. Before using update command you should clear all the cache files from Drush and Drupal.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush rf\ndrush cc all\ndrush up\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ECommand update (\u003Cstrong\u003Eup\u003C\/strong\u003E) updates all modules pending, but you can also update only one or a few modules at the time. If you're updating very important site, then you should first take a backup from SQL database and then update all modules one by one so if something goes wrong you know which module is the most problematic.\u003C\/p\u003E\n\n\u003Cp\u003E\u003Cstrong\u003E-y\u003C\/strong\u003E skips the confirmation question.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush up drupal -y\ndrush up module1 module2 -y\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThat command also updates your database if needed, but you can also do it without updating modules.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush updb\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EDrush always takes backups from modules and core before upgrading them, so if new version is not good for you, you can always switch back to old ones.\u003C\/p\u003E\n\n\u003Ch2\u003ESee all the enabled modules\u003C\/h2\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush pm-list --type=Module --no-core --status=enabled\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you want to find certain module from the list:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush pm-list --type=Module --no-core --status=enabled | grep module\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EInformation about certain module:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush pm-info <module_name>\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EDisable and uninstall modules\u003C\/h2\u003E\n\n\u003Cp\u003ECommand disable (\u003Cstrong\u003Edis\u003C\/strong\u003E) only disable module, but does not delete anything. Can also disable all modules depending on disabled module.\u003C\/p\u003E\n\n\u003Cp\u003ECommand pm-uninstall disable module and delete all information from SQL. Module is still under all\/modules after pm-uninstall but all data is gone.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush dis module1 module2 -y\ndrush pm-uninstall module -y\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf Drupal is broken and you can't disable modules normally:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush sql-query \"UPDATE system SET status = '0' WHERE name = 'module_name'\"\ndrush sql-query \"DELETE FROM cache_bootstrap WHERE cid = 'system_list'\"\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EHow to disable all non-core modules\u003C\/h2\u003E\n\n\u003Cp\u003E\u003Ccode\u003Edrush pml --no-core --type=module --status=enabled --pipe | xargs drush -y dis\u003C\/code\u003E\u003C\/p\u003E\n\n\u003Ch2\u003EDrush Lock: How to freeze the version of a module during 'drush up'\u003C\/h2\u003E\n\n\u003Cp\u003EEvery so often I will find myself needing to update lots of Drupal modules but not one in particular.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush up --lock=views_slideshow\ndrush up --unlock=views_slideshow\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EBackup\u003C\/h2\u003E\n\n\u003Cp\u003EDrush can backup your database, code and files into a single file.\u003Cbr \/\u003E\nCommands: archive-dump (ard) and archive-restore (arr).\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush ard default --destination=\/backups\/mysite.tar\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYou can also backup only your database:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush sql-dump > \/path\/to\/backup_dir\/database-backup.sql\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ERecovering the administrator password\u003C\/h2\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush upwd --password=\"password1234\" admin\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYou can also use that command for any other user.\u003C\/p\u003E\n\n\u003Ch2\u003EUnlock a locked user account\u003C\/h2\u003E\n\n\u003Cp\u003EDrupal locks user account after five failed attempt. That is very good if someone tries to guess your password, but very bad if you tried and failed multiple times yourself. This command will unlock user account which was locked because of flood \/ spam.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush sql-query \"delete from flood\"\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ECreate and delete users\u003C\/h2\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush user-create username --mail=\"person@example.com\" --password=\"letmein\"\ndrush user-cancel username\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EForce logout\u003C\/h2\u003E\n\n\u003Cp\u003ELog all users out:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush sql-query 'TRUNCATE TABLE sessions;'\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch3\u003ELog out a specific user\u003C\/h3\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Edrush sql-query 'DELETE FROM sessions WHERE uid = 2;'\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EUpdate all Drupal websites\u003C\/h2\u003E\n\n\u003Cp\u003EI made a script which I use to update all hosted Drupal websites at once. Very simple script, but still so powerful and saves a lot of time. You can find this script at \u003Ca href=\"https:\/\/github.com\/tewdin\/Drupal-Drush\" target=\"_blank\" title=\"Drush script by Timo Anttila\" rel=\"noreferrer noopener\"\u003EGithub\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E#!\/bin\/sh\n# Author: Timo Anttila, info@tuspe.com\ncd \/www\/drupal\nfor d in .\/* ; do (cd \"$d\/www\/sites\" && drush up -y && drush cc all); done\nchown -R www-data.www-data \/www\/drupal\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch3\u003ERead more\u003C\/h3\u003E\n\n\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"https:\/\/github.com\/tewdin\/Drupal-Drush\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EUpdate all your Drupal websites once\u003C\/a\u003E\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"http:\/\/docs.drush.org\/en\/master\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EDrush Docs\u003C\/a\u003E\u003C\/li\u003E\n\u003C\/ul\u003E"
	},
	"simplexmlflickrfeedparser": {
		"title": "How to parse an XML Flickr feed",
		"url": "simple-xml-flickr-feed-parser",
		"pub1": "Oct 10, 2015",
		"pub2": "2015-10-10",
		"desc": "This simple XML Flickr feed parser fetch newest photos and show them with links and thumbnails.",
		"body": "\u003Cp\u003EI love taking pictures and I want to show my newest pictures on my website. However, there was no easy way to embed pictures from Flickr to the website if you don't want to use slideshow and iframe. I searched and found a simple PHP script made by Mr. Haddad. He did a great job but it gave only large images as text so I had to tweak it a little bit.\u003C\/p\u003E\n\n\u003Cp\u003ENowadays, it's all about loading time and speed so I wanted to use small thumbnails. All images used _b.jpg and smaller size images had their own ending so getting the right size was very easy; search _b and replace it with whatever you want. You can use Fancybox effect to make it look nicer.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E<?php\n\/* Author: Samuel Haddad (2010), edited by Timo Anttila (2015)\n * SimpleXML Flickr Feed Parser\n *\/\n\n\/\/ Feed URL in RSS Format\n$url =\"https:\/\/api.flickr.com\/services\/feeds\/photos_public.gne?id=136453500@N06&lang=en-us&format=rss_200\";\n\n\/\/Use simple XML to parse the feed\n$xml = simplexml_load_file($url);\n$items = $xml->xpath('\/rss\/channel\/item');\necho \"<div class='gallery'>\"; \/\/ Wrapper\n\nforeach($items as $item){\n $nsmedia = $item->children('http:\/\/search.yahoo.com\/mrss\/');\n $img = $nsmedia->content->attributes(); \/\/ Image URL (b)\n $thumb = strtr($img, array ('_b.jpg' => '_t.jpg')); \/\/ Thumb\n echo \"<a href='$img'><img src='$thumb' alt=''><\/a>\"; \/\/ Combine them all\n}\necho \"<\/div>\";\n?>\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EFlickr Thumb Sizes\u003C\/h2\u003E\n\n\u003Cul\u003E\u003Cli\u003Es: 75 x 75\u003C\/li\u003E\n\t\u003Cli\u003Eq: 150 x 150\u003C\/li\u003E\n\t\u003Cli\u003Et: 100 x 75\u003C\/li\u003E\n\t\u003Cli\u003Em: 240 x 180\u003C\/li\u003E\n\t\u003Cli\u003En: 320 x 320\u003C\/li\u003E\n\t\u003Cli\u003Ez: 640 x 640\u003C\/li\u003E\n\t\u003Cli\u003Ec: 800 x 600\u003C\/li\u003E\n\t\u003Cli\u003Eb: 1024 x 768\u003C\/li\u003E\n\t\u003Cli\u003Eo: 2400 x 1800\u003C\/li\u003E\n\u003C\/ul\u003E\u003Ch2\u003ECSS\u003C\/h2\u003E\n\n\u003Cp\u003EEverything is working just fine but for better overview little bit of CSS is needed.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E.gallery a {\n display: inline-block;\n vertical-align: top;\n padding: 5px;\n border: 1px solid #ccc;\n margin: 0 5px 5px 0;\n}\n\n.gallery a:nth-child(4n+0){\n margin-right: 0;\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EI like to use inline-block over float because inline-block does not need clear before .gallery's closing tag. Works better most of the time. I also like to make small padding with a border around images because it makes images look better. I don't know, maybe it's just me.\u003C\/p\u003E\n\n\u003Cp\u003EFor the best performance you should use. gallery a: nth-child(4n+0) where the number 4 should be the last image from the first row. So if you have three pictures in a row, then the number should be three (3). The first number represents a cycle size, and is a counter (starts at 0), and last zero (0) is an offset value.\u003C\/p\u003E\n\n\u003Ch3\u003ESource:\u003C\/h3\u003E\n\n\u003Cul\u003E\u003Cli\u003E\u003Ca href=\"http:\/\/samuelhaddad.com\/2010\/10\/21\/simple-xml-parse-flickr-feed\/\" target=\"_blank\" title=\"Samuel Haddad: Simple XML Parse Flickr Feed\" rel=\"noreferrer noopener\"\u003Esamuelhaddad.com\u003C\/a\u003E\u003C\/li\u003E\n\t\u003Cli\u003E\u003Ca href=\"https:\/\/www.flickr.com\/services\/api\/flickr.photos.getSizes.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EFlickr\u003C\/a\u003E\u003C\/li\u003E\n\u003C\/ul\u003E"
	},
	"mysql": {
		"title": "A beginner's guide to MySQL / MariaDB",
		"url": "mysql",
		"pub1": "Oct 10, 2015",
		"pub2": "2015-10-10",
		"desc": "A basic tutorial how to take control of MySQL / MariaDB server, how to make a database and a user, and how to store information in the MySQL database.",
		"body": "\u003Cp\u003ENormally, you can do everything with MySQL Workbench or software like that, but sometimes, you need to know how to use basic MySQL commands to complete your tasks.\u003C\/p\u003E\n\n\u003Ch2\u003EHow to install MySQL \/ MariaDB on Ubuntu, Debian and CentOS\u003C\/h2\u003E\n\n\u003Cp\u003EIf you don't have MySQL server installed on your server, you can quickly download it. Getting the right packets depends on your system, but it's very easy if you're using Debian \/ Ubuntu based systems or CentOS. Use a complex password for the root account when the system asks you to type it. Do not use same password what you use for your server's root \/ superuser account.\u003C\/p\u003E\n\n\u003Ch3\u003EDebian and Ubuntu:\u003C\/h3\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo apt-get install mysql-server\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch3\u003ECentOS:\u003C\/h3\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo yum install mysql-server\n\/etc\/init.d\/mysqld start\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENow you should have the MySQL server up and running.\u003C\/p\u003E\n\n\u003Ch3\u003EStarting server\u003C\/h3\u003E\n\n\u003Cp\u003EYou can start, restart and stop the server easily:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo \/etc\/init.d\/mysql restart | stop | start\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EHow to access the MySQL server\u003C\/h2\u003E\n\n\u003Cp\u003EI prefer a graphical interface for creating and managing databases and users (ex. \u003Ca href=\"https:\/\/www.mysql.com\/products\/workbench\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EMySQL Workbench\u003C\/a\u003E, \u003Ca href=\"https:\/\/www.heidisql.com\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EHeidiSQL\u003C\/a\u003E, \u003Ca href=\"https:\/\/www.phpmyadmin.net\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EphpMyAdmin\u003C\/a\u003E, but you can also connect to the MySQL server by typing the following command into terminal:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Emysql -u username -p\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you're logging in the first time, then you probably don't have any other users than root and the password for that user is whatever you put when you installed the MySQL server.\u003C\/p\u003E\n\n\u003Cp\u003ERemember, all MySQL commands end with a semicolon (;). The command will not execute without it.\u003C\/p\u003E\n\n\u003Cp\u003EIt is common practise that MySQL commands are written in uppercase and everything else, like database and user names, are in lowercase to make them easier to distinguish. However, the MySQL command line is not case sensitive and you can write everything in lowercase if you like to.\u003C\/p\u003E\n\n\u003Ch2\u003EHow to create, access and delete a MySQL Database\u003C\/h2\u003E\n\n\u003Cp\u003ELet's make a database called test. Log in to the MySQL server as root and type:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003ECREATE DATABASE test;\nCREATE DATABASE test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you want to know what databases are available:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003ESHOW DATABASES;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThe command above show all the databases that are created in the MySQL server.\u003C\/p\u003E\n\n\u003Cp\u003EAfter creating a database, you can start using it and store information in it. Open the database by typing:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EUSE test;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENow you're in the database and can create tables. Remember, table and database names are case sensitive.\u003C\/p\u003E\n\n\u003Ch2\u003EHow to create a table inside of the database\u003C\/h2\u003E\n\n\u003Cp\u003ELet's create a table called test. There have to be a \u003Cstrong\u003EPRIMARY KEY\u003C\/strong\u003E in every table and in this case the key is \u003Cstrong\u003EAUTO_INCREMENT\u003C\/strong\u003E meaning it automatically numbers each row. The key must be unique, because rows are identified by it.\u003C\/p\u003E\n\n\u003Cp\u003EThere will be also name and birthday. Name is using \u003Cstrong\u003EVARCHAR\u003C\/strong\u003E and bday is \u003Cstrong\u003EDATE\u003C\/strong\u003E. MySQL requires that dates be written as \u003Cstrong\u003Eyyyy-mm-dd\u003C\/strong\u003E.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003ECREATE TABLE test (\n id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n name VARCHAR(20),\n bday DATE\n);\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENow you can see what you just did by typing:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003ESHOW TABLES;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EStructure:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EDESCRIBE test;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EHow to add information to a MySQL table\u003C\/h2\u003E\n\n\u003Cp\u003EUse this format to insert information into each row:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EINSERT INTO 'test' ('id','name','food','confirmed','signup_date')\nVALUES (NULL, \"Max\", '1977-07-17');\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you want to see what table has been eating:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003ESELECT * FROM test;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYou can also update exiting data:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EUPDATE 'test' SET 'bday' = '1981-07-17' WHERE 'test'.'name' ='Max';\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch3\u003EHow to delete a database\u003C\/h3\u003E\n\n\u003Cp\u003EWhen database is no longer needed you can drop it.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EDROP DATABASE test;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EHow to create a new MySQL user\u003C\/h2\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003ECREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password';\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThere should be only one database per user. It is more secure.\u003C\/p\u003E\n\n\u003Ch2\u003EMySQL user permission\u003C\/h2\u003E\n\n\u003Cp\u003EThe next command will give all the rights to the certain database but the user can not grant privileges to other users or take anything from them. The user can control the database, create tables and data, and drop everything. That is the most common way to give access to the database.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EGRANT ALL PRIVILEGES ON test.* TO 'newuser'@'localhost';\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf you really want to, you can also give the user superuser rights with grant option. That is not recommended when working with CMS or apps.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EGRANT ALL PRIVILEGES ON mydb.* TO 'myuser'@'%' WITH GRANT OPTION;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EYou can also give certain permissions to the database or the table if you don't want to give all the rights.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EGRANT [type of permission] ON [database name].[table name] TO 'username'@'localhost';\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EOr you can revoke some rights if the user don't need them:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EREVOKE [type of permission] ON [database name].[table name] FROM 'username'@'localhost';\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EAfter making a change, you should flush privileges.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EFLUSH PRIVILEGES;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EDelete a MySQL user\u003C\/h2\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003EDROP USER 'demo'@'localhost';\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EOptimize databases\u003C\/h2\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Emysqlcheck -u username -p --optimize --all-databases\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThanks for reading!\u003C\/p\u003E"
	},
	"howtoparseanxmldocumentwithphp": {
		"title": "Parse an XML document with PHP",
		"url": "how-to-parse-an-xml-document-with-php",
		"pub1": "Oct 10, 2015",
		"pub2": "2016-10-10",
		"desc": "A simple PHP script which can store an XML document as a file to the server and use it for the website. Replaces file older than 24 hours.",
		"body": "\u003Cp\u003EHey there. This time I'll teach you how to fetch an XML feed \/ document, store it to the server and parse it to the website. You can also use SQL database for storing all the information from the feed, but my way does not need a database and its universal so you can use it on any platform which support PHP.\u003C\/p\u003E\n\n\u003Cp\u003EThis example can be used for any XML document but I made this for those who use \u003Ca href=\"https:\/\/www.meltwater.com\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EMeltwater News\u003C\/a\u003E, which is an online media intelligence service which searches news sources for keywords of relevance to its business customers.\u003C\/p\u003E\n\n\u003Cp\u003EThe first problem is that we do not want to fetch the XML feed many times per day because it takes more time to load a webpage, and requests can be perceived as spam. Feed provider can even block the website which spams it all the time. So I had to figure out how to store the information from the XML feed somewhere.\u003C\/p\u003E\n\n\u003Cp\u003EI created a simple PHP script which creates a file from the feed and every time when page is loaded the script check how old the file is. If the file is older than \u003Ccode\u003E$time\u003C\/code\u003E then delete the old one and fetch a new one. \u003Ccode\u003E$time\u003C\/code\u003E uses seconds, so in this example 86400 is 24 hours.\u003C\/p\u003E\n\n\u003Cp\u003ESo let's get started. I use four variables for the important parts and \u003Ccode\u003E$path\u003C\/code\u003E to combine server direction and filname. Everything is very self explained. \u003Ccode\u003E$dir\u003C\/code\u003E is a local directory where you want to save the fetched file.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$url = \"https:\/\/timoanttila.com\/sitemap.xml\";\n$dir = \"\/tmp\/\";\n$file = \"sitemap.xml\";\n$time = 86400;\n$path = $dir.$file;\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThen part of the code which checks how old the file is and if the file is too old, replace it with a new one.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Eif (filemtime($file) < time() - $time) {\n unlink($file);\n $ch = curl_init($url);\n curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n $data = curl_exec($ch);\n curl_close($ch);\n file_put_contents($path, $data);\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ELast part of the code is for parsing it to the website.\u003C\/p\u003E\n\n\u003Cp\u003E\u003Ccode\u003E$xml\u003C\/code\u003E is loading the xml file from \u003Ccode\u003E$path\u003C\/code\u003E. Then, we must know what kind of data there is. Use \u003Ccode\u003Evar_dump($xml)\u003C\/code\u003E to see what's inside. Meltwater uses objects and arrays, so the right path is sometime like \u003Ccode\u003E$xml->feed->documents->document->the_item_you_looking_for\u003C\/code\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EWhen we know what we want to fetch from the file, then we can run foreach for every line under it. After that it's just how you want to show the data on your website.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003E$xml = simplexml_load_file($path) or die(\"There is a problem with the feed.\");\nforeach ($xml->feed->documents->document as $item) {\n $title = $item->title;\n $date = $item->createDate_day2 . \".\" . $item->createDate_mon . \".\" . $item->createDate_year;\n echo \"<div class='views-row'>\n <div class='views-field-created'>\n $date - $item->sourcename\n <\/div><div class='views-field-title'>\n <a href='$item->url' title='$title ($item->sourcename - $date)'>$title<\/a>\n <\/div><\/div>\";\n}\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThere you go. \u003Cem\u003ESimple PHP XML document script\u003C\/em\u003E which can store information for a day and fetch more tomorrow.\u003C\/p\u003E"
	},
	"teamspeak3": {
		"title": "How to set up TeamSpeak 3 server",
		"url": "teamspeak-3",
		"pub1": "Sep 9, 2015",
		"pub2": "2015-09-09",
		"desc": "Tutorial how to set up and run a TeamSpeak 3 server as service on Linux.",
		"body": "\u003Cp\u003EFirst, we need the latest version of the \u003Ca href=\"http:\/\/ftp.4players.de\/pub\/hosted\/ts3\/releases\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ETeamSpeak 3 server for Linux\u003C\/a\u003E. You can also download the package from \u003Ca href=\"https:\/\/www.teamspeak.com\/en\/downloads\/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Ethe official website\u003C\/a\u003E.\u003C\/p\u003E\n\n\u003Cp\u003EMove the packages to the server and unzip it.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Etar xvjf teamspeak3-server_linux_amd64-3.8.0.tar.bz2\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENow we have TeamSpeak 3 server folder which you want move to the better place. The folder's name depends which package you chose. I assume you work same directory where you download it. You need sudo if you don't work as root or superuser already.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo mv teamspeak3-server_linux-amd64 \/usr\/local\/teamspeak3\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ERun the TeamSpeak 3 server as service\u003C\/h2\u003E\n\n\u003Cp\u003ENext we want to make it run as service and startup after boot. First, we make symbolic link to \u003Ccode\u003E\/etc\/init.d\u003C\/code\u003E.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo ln -s \/usr\/local\/teamspeak3\/ts3server_startscript.sh \/etc\/init.d\/teamspeak3\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EThen we have to create a user who runs TeamSpeak as a service. We don't want that user able to log in so this is local account only. New user needs privilege to run the service so we must change the ownership of the folder to user teamspeak3.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo adduser --disabled-login teamspeak3\nsudo chown -R teamspeak3 \/usr\/local\/teamspeak3\nsudo update-rc.d teamspeak3 defaults\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003ERunning the server first time\u003C\/h2\u003E\n\n\u003Cp\u003ENow we\u2019re all done and it\u2019s time to start the TeamSpeak 3 server for the first time.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo service teamspeak3 start\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003ENow there is coming very important information for you. You need token to raise your level of admin group and there is also login information for Telnet connections. You can use the token only once, but write down the login information because those are the only way to restore your admin rights if you delete your TeamSpeak information from your client computer.\u003C\/p\u003E\n\n\u003Cp\u003EYour server is probably protected with firewall so you need to open the port for TeamSpeak 3 server. The default port for voice is 9987 (UDP) and for Telnet 10011 (TCP). If you use ufw the command will be:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Esudo ufw allow 9987\/udp\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Ch2\u003EGaining the power\u003C\/h2\u003E\n\n\u003Cp\u003ENow use your TeamSpeak 3 client to connect your server. When you log in the first time the server will ask the token. Copy the code from the server window and hit enter. Now you're the Boss. You can do whatever you want and no one can stop you.\u003C\/p\u003E\n\n\u003Cp\u003EFirst, you should go check out server and channel groups and make them as you like. After that, create your channels and let people in.\u003C\/p\u003E\n\n\u003Ch2\u003ERestore admin rights\u003C\/h2\u003E\n\n\u003Cp\u003EUse Telnet connection to your server where TeamSpeak is running.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Etelnet your_ip\/host 10011\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EAfter succeful login write this to input line.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Elogin serveradmin password\nclientsetserverquerylogin client_login_name=serveradmin\u003C\/code\u003E\u003C\/pre\u003E"
	},
	"generatingsshkeys": {
		"title": "How to generating SSH keys",
		"url": "generating-ssh-keys",
		"pub1": "Sep 9, 2015",
		"pub2": "2015-09-09",
		"desc": "SSH keys serve as a means of identifying yourself to an SSH server using public-key cryptography and challenge-response authentication.",
		"body": "\u003Cp\u003EI have to log in to four different servers and time is always money so I don\u2019t have time or will to type passwords all the time. Easiest way to log in without a password is \u003Cstrong\u003Essh keys\u003C\/strong\u003E. You need a pair of keys, \u003Cstrong\u003Eprivate\u003C\/strong\u003E and \u003Cstrong\u003Epublic\u003C\/strong\u003E, and use them while logging in.\u003C\/p\u003E\n\n\u003Cp\u003ESSH keys serve as a means of identifying yourself to an SSH server using \u003Ca href=\"https:\/\/en.wikipedia.org\/wiki\/Public-key_cryptography\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Epublic-key cryptography\u003C\/a\u003E and \u003Ca href=\"https:\/\/en.wikipedia.org\/wiki\/Challenge-response_authentication\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Echallenge-response authentication\u003C\/a\u003E. One immediate advantage this method has over traditional password authentication is that you can be authenticated by the server without ever having to send your password over the network (\u003Ca href=\"https:\/\/wiki.archlinux.org\/index.php\/SSH_keys\" target=\"_blank\" title=\"SSH keys\" rel=\"noreferrer noopener\"\u003Esource\u003C\/a\u003E).\u003C\/p\u003E\n\n\u003Cp\u003EFirst, you need to generate a pair of keys. One for yourself (private key, \u003Cem\u003Eid_rsa\u003C\/em\u003E) and another one for a server (public key, \u003Cem\u003Eid_rsa.pub\u003C\/em\u003E). The easiest way is run \u003Cstrong\u003ETerminal \/ CMD\u003C\/strong\u003E and run a command \u003Cstrong\u003Essh-keygen\u003C\/strong\u003E. If you\u2019re a Windows user you can also download \u003Cstrong\u003E\u003Ca href=\"http:\/\/www.chiark.greenend.org.uk\/~sgtatham\/putty\/download.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EPuTTYgen\u003C\/a\u003E\u003C\/strong\u003E and use it to create a pair of keys.\u003C\/p\u003E\n\n\u003Cp\u003EIf you're interested about ssh-keygen in general, type \u003Cstrong\u003Eman ssh-keygen\u003C\/strong\u003E and RTFM. You'll find all important information about ssh-keygen there.\u003C\/p\u003E\n\n\u003Ch2\u003EGenerating the keys\u003C\/h2\u003E\n\n\u003Cp\u003ESo back in business, as they say. Open Terminal or CMD and type:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Essh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003E\u003Cstrong\u003ERSA\u003C\/strong\u003E is a cryptosystem for public-key encryption, and is widely used for securing sensitive data, particularly when being sent over an insecure network such as the Internet (read more about RSA). \u003Cstrong\u003E-b\u003C\/strong\u003E specifies the number of bits in the key to create. For RSA keys, the default is 2048 and that is generally considered sufficient. \u003Cstrong\u003E-C\u003C\/strong\u003E is just a comment for the key. Easier to remember wich key is wich when you look your public keys.\u003C\/p\u003E\n\n\u003Cp\u003EI suggest keeping the default settings as they are, so when you're prompted to \"\u003Cem\u003EEnter a file in which to save the key\u003C\/em\u003E\", just press Enter to continue.\u003C\/p\u003E\n\n\u003Cp\u003EYou'll be asked to enter a passphrase. Do not use your real password for this. If you're using Ubuntu based Linux or OS X, you have to remember this only once.\u003C\/p\u003E\n\n\u003Ch2\u003ECopy the public key to server\u003C\/h2\u003E\n\n\u003Cp\u003ENow the keys are generated and next you want to add your new key to the server. This is the last time when you need to log in with your real password.\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Essh-copy-id ~\/.ssh\/id_rsa.pub account@server\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EIf your OS does not have that command you have to log in your server and edit \u003Cstrong\u003E~\/.ssh\/authorized_keys\u003C\/strong\u003E. Add the public key to last line of the file and save.\u003C\/p\u003E\n\n\u003Ch2\u003ETesting connection\u003C\/h2\u003E\n\n\u003Cp\u003EAfter that you can test your connection. If you're running Linux Mint or Ubuntu, your system should know your new key and that should be prompted while connecting to the server. If your key is not automatically added to ssh-agent then run the command:\u003C\/p\u003E\n\n\u003Cpre\u003E\n\u003Ccode\u003Essh-agent ~\/.ssh\/id_rsa\u003C\/code\u003E\u003C\/pre\u003E\n\n\u003Cp\u003EWindows users may have to run \u003Cstrong\u003EPageant\u003C\/strong\u003E or some other similar software.\u003C\/p\u003E\n\n\u003Cp\u003ELinux Mint, Ubuntu and OS X can store your private key password to Keyring which means that you don't have to type it ever again. Those OS also runs ssh-agent with private key automatically so you don't have to worry about adding id_rsa to agent anymore. Some other Linux OS and Windows users have to add the file every time they log in. That's just sad. And if you run your servers as superuser, you need to type your real password while prompted.\u003C\/p\u003E\n\n\u003Cp\u003EThanks for reading and hope you learned something today.\u003C\/p\u003E"
	},
	"simplepopup": {
		"title": "How to create a simple popup",
		"url": "simple-popup",
		"pub1": "Sep 7, 2015",
		"pub2": "2015-09-07",
		"desc": "Simple PHP / JavaScript popup created for Drupal but can be used with any platform. Popup works only once and again after the cookie is cleared.",
		"body": "<p>While working on Drupal, sometimes clients want something more special like a popup window with questions or image. We could use existing modules, but they always require the enactment and you never can know what you really get and most of them do not even support everything what we need, so I decided to make my own version.</p><p>I wanted to keep it simple. This example is for image and link. Popup jump in only once per browser and stay off until the cookie is cleared or expired. If you know anyway to make it better, please leave a comment and tell me how.</p><p>So, we want to know if a visitor is here first time or is (s)he has been here before. The simplest way to do it is ask nicely if browser has any cookies to offer. Isset() will return FALSE if testing a variable that has been set to NULL.</p><p>If the answer is FALSE then serve a popup and a cookie for poor browser and let's get this party started.</p><h2>PHP and HTML</h2><p>As you can see below, I have used variables for name, description and time. I recommend to use a descriptive and unique name for name because we don't want to mess with other cookies which may have been set for the same site. Doesn't really matter what you put to $item. Time determines how long you want to keep it active (seconds).</p><pre><code>&lt;?php<br/>$name = \"cookie_name\";<br/>$item = \"description_or_something_else\";<br/>$int = 604800;<br/>if(!isset($_COOKIE[$name])){ setcookie($name,$item,time()+$int); ?&gt;<br/>&lt;div id=\"popup\"&gt;&lt;div class=\"wrap\"&gt;&lt;a href=\"your_link\"&gt;<br/>&lt;img src=\"your_image.jpg\" alt=\"insert_title\"&gt;&lt;/a&gt;<br/>&lt;a href=\"#\" class=\"stop\"&gt;x&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;<br/>&lt;?php } ?&gt;</code></pre><p>PHP part is ready and the popup is working. It needs a little bit CSS and working close button (X in the right corner).</p><h2>JavaScript</h2><p>I don't know which is the best way to go, JavaScript or PHP, when a visitor wants to close the popup. I used a simple JS script for that. If a visitor presses X (class stop) then add class nogo to #popup. Simple.</p><pre><code>&lt;script type=\"text/javascript\"&gt;<br/>(function ($) {<br/>$(\".stop\").click(function() {<br/>$(\"#popup\").toggleClass(\"nogo\");<br/>return false; });<br/>})<br/>(jQuery);<br/>&lt;/script&gt;</code></pre><h2>CSS</h2><p>Last but never least, let's make it look nicer. The popup must be top of everything so I used position: absolute and high z-index to make sure of that. It covers the entire screen. After that I just drop .wrap element to the right place.</p><pre><code>#popup {<br/>width: 100%;<br/>height: 100vh;<br/>position: fixed;<br/>top: 0; left: 0;<br/>background: rgba(0,0,0,.7);<br/>z-index: 999;<br/>}<br/><br/>#popup .wrap {<br/>width: 730px;<br/>background: #fff;<br/>margin: 15vh auto 0;<br/>padding: 25px 25px 23px;<br/>-moz-border-radius: 6px;<br/>-webkit-border-radius: 6px;<br/>border-radius: 6px;<br/>position: relative;<br/>}<br/><br/>#popup .stop {<br/>position: absolute;<br/>top: 5px;<br/>right: 7px;<br/>width: 15px;<br/>text-align: center;<br/>font-size: 1.5em;<br/>}<br/><br/>#popup.nogo { display: none; }</code></pre>"
	}
}