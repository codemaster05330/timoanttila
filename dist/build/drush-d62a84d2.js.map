{"version":3,"file":"drush-d62a84d2.js","sources":["../../src/pages/tutorials/drush.md"],"sourcesContent":["---\ntitle: A beginner's guide to Drush\npub:\n- 1\n- Jan\npublished: 2016-01-27T20:01:10+02:00\nmodified: 2020-09-11T00:43:05+03:00\nsummary: Drush is a command-line shell and scripting interface for Drupal. This tutorial help you understand how Drush works and how it makes your life easier.\nlayout: tutorial\n---\n\n<a href=\"https://www.drush.org/\" rel=\"noopener\" target=\"_blank\">Drush</a> is a command-line shell and scripting interface for <a href=\"https://www.drupal.org/\" rel=\"noopener\" target=\"_blank\">Drupal</a>. It makes my life a lot easier because I don't have to manage all the websites from Drupal's admin pages, but I can give commands to the server's command line. It helps you perform admin tasks using one or few commands in the terminal.\n\nYou need to <a href=\"https://en.wikipedia.org/wiki/Secure_Shell\" rel=\"noopener\" target=\"_blank\" title=\"Wikipedia: Secure Shell\">SSH access</a> to your server and write all commands to the terminal. <a href=\"https://www.chiark.greenend.org.uk/~sgtatham/putty/\" rel=\"noopener\" target=\"_blank\">PuTTY</a> is very good tool for Windows and OS X / Linux got their own terminal + ssh software so you can just start by making a connection to your server. If you don't know how to use ssh then you probably don't want to play with drush.\n\n## Install drush\n\nDownload latest stable release using the code below:\n\n```Shell\nwget -O drush.phar https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar\n```\n\nNo one likes to use long commands like `php drush.phar <drush_command>` so let's make it work as normal commands. If you have `sudo` or `root` access to your server then copy `drush.phar` to `/usr/local/bin/`.\n\n```Shell\nchmod +x drush.phar\nsudo mv drush.phar /usr/local/bin/drush\n```\n\nIf you don't have special rights to a server, you can add `export PATH=$PATH:</path/to/file>` to your `~/.bashrc` file (if your system use bash).\n\n## Download, enable and uninstall modules\n\nGo to your Drupal installation folder.\n\n```Shell\ncd /<your_drupal_folder>/sites\n```\n\nYou can download and enable any module from <a href=\"https://www.drupal.org/project/project_module\" rel=\"noopener\" target=\"_blank\" title=\"Official Drupal Modules\">Drupal.org</a> and you can enable multiple modules at once.\n\nI use this \"one liner\" to activate all the necessary modules for new site (Drush download the modules automatically):\n\n```Shell\ndrush en pathauto ckeditor views jquery_update module_filter transliteration l10n_update admin_menu admin_menu_toolbar imce less html5_tools menu_block views_ui ctools token libraries elements field_ui overlay image contextual taxonomy\n```\n\nCommand `drush en` enable module. You can also only download modules without activating them by using `drush dl` (pm-download).\n\n`drush dis` (pm-disable) is a command to uninstall. Drush can't delete modules so you have to do that manually (`rm -rf /<your_drupal_folder>/sites/all/modules/<module>`).\n\n## Update Drupal with Drush\n\nSee main information and status of the site:\n\n```Shell\ndrush status\n```\n\nBefore I found Drush it was a pain in the ass upgrading Drupal core and all enabled modules. Now you can just write one simple command and watch how Drush does all the work for you.\n\nUse the command below to see all available updates. Before using the update command you should clear all the cache files from Drush and Drupal.\n\n```Shell\ndrush rf\ndrush cc all\ndrush up\n```\n\nCommand update (`up`) updates all modules pending, but you can also update only one or a few modules at the time. If you're updating a very important site, then you should first take a backup from SQL database and then update all modules one by one so if something goes wrong you know which module is the most problematic.\n\n`-y` skips the confirmation question.\n\n```Shell\ndrush up drupal -y\ndrush up module1 module2 -y\n```\n\nThat command also updates your database if needed, but you can also do it without updating modules.\n\n```Shell\ndrush updb\n```\n\nDrush always takes backups from modules and core before upgrading them, so if a new version is not good for you, you can always switch back to old ones.\n\n## See all the enabled modules\n\n```Shell\ndrush pm-list --type=Module --no-core --status=enabled\n```\n\nIf you want to find certain module from the list:\n\n```Shell\ndrush pm-list --type=Module --no-core --status=enabled | grep module\n```\n\nInformation about certain module:\n\n```Shell\ndrush pm-info <module_name>\n```\n\n## Disable and uninstall modules\n\nCommand disable (`dis`) only disables the module, but does not delete anything. Can also disable all modules depending on disabled module.\n\nCommand pm-uninstall disable module and delete all information from SQL. Module is still under all/modules after pm-uninstall but all data is gone.\n\n```Shell\ndrush dis module1 module2 -y\ndrush pm-uninstall module -y\n```\n\nIf Drupal is broken and you can't disable modules normally:\n\n```Shell\ndrush sql-query \"UPDATE system SET status = '0' WHERE name = 'module_name'\"\ndrush sql-query \"DELETE FROM cache_bootstrap WHERE cid = 'system_list'\"\n```\n\n## How to disable all non-core modules\n\n```Shell\ndrush pml --no-core --type=module --status=enabled --pipe | xargs drush -y dis\n```\n\n## Drush Lock: How to freeze the version of a module during 'drush up'\n\nEvery so often I will find myself needing to update lots of Drupal modules but not one in particular.\n\n```Shell\ndrush up --lock=views_slideshow\ndrush up --unlock=views_slideshow\n```\n\n## Backup\n\nDrush can backup your database, code and files into a single file.  \nCommands: `archive-dump` (ard) and `archive-restore` (arr).\n\n```Shell\ndrush ard default --destination=/backups/mysite.tar\n```\n\nYou can also backup only your database:\n\n```Shell\ndrush sql-dump > /path/to/backup_dir/database-backup.sql\n```\n\n## Recovering the administrator password\n\n```Shell\ndrush upwd --password=\"password1234\" admin\n```\n\nYou can also use that command for any other user.\n\n## Unlock a locked user account\n\nDrupal locks the user account after five failed attempts. That is very good if someone tries to guess your password, but very bad if you tried and failed multiple times yourself. This command will unlock the user account which was locked because of flood / spam.\n\n```Shell\ndrush sql-query \"delete from flood\"\n```\n\n## Create and delete users\n\n```Shell\ndrush user-create username --mail=\"person@example.com\" --password=\"letmein\"\ndrush user-cancel username\n```\n\n## Force logout\n\nLog all users out:\n\n```Shell\ndrush sql-query 'TRUNCATE TABLE sessions;'\n```\n\n### Log out a specific user\n\n```Shell\ndrush sql-query 'DELETE FROM sessions WHERE uid = 2;'\n```\n\n## Update all Drupal websites\n\nI made a script which I use to update all hosted Drupal websites at once. Very simple script, but still so powerful and saves a lot of time. You can find this script at <a href=\"https://github.com/timoanttila/Drupal-Drush\" rel=\"noopener\" target=\"_blank\" title=\"Drush script by Timo Anttila\">Github</a>.\n\n```Bash\n#!/bin/sh\n# Author: Timo Anttila, moro@tuspe.com\ncd /www/drupal\nfor d in ./* ; do (cd \"$d/www/sites\" &amp;&amp; drush up -y &amp;&amp; drush cc all); done\nchown -R www-data.www-data /www/drupal\n```\n\n### Read more\n\n<ul>\n<li><a href=\"https://github.com/timoanttila/Drupal-Drush\" rel=\"noopener\" target=\"_blank\">Update all your Drupal websites once</a></li>\n<li><a href=\"http://docs.drush.org/en/master/\" rel=\"noopener\" target=\"_blank\">Drush Docs</a></li>\n</ul>"],"names":["metadata","title","pub","published","modified","summary","layout"],"mappings":"qvcAS2BA,4LAAAA,yIARbA,GAAYC,MAAQ,8BAA8BC,KAAO,EAAE,OAAOC,UAAY,2BAA2BC,SAAW,2BAA2BC,QAAU,yJAAyJC,OAAS"}