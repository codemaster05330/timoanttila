{"version":3,"file":"bash-replace-line-in-file-25b5d6e2.js","sources":["../../src/pages/tutorials/bash-replace-line-in-file.md"],"sourcesContent":["---\ntitle: Replace a line in a text file automatically every week with Linux bash shell script\npub:\n- 12\n- Feb\npublished: 2017-02-12T11:45:54+02:00\nmodified: 2020-08-16T03:30:39+03:00\nsummary: My goal was to read the number in the file, and if the number is smaller than three add one to it, and if bigger reset the number to one. Write new to the file.\nlayout: tutorial\n---\n\nIn this case I had to create a view to a website where the lunch list changes every week in three week cycles. I did an actual view with PHP, but the number changes every week was better done separately. PHP is only loaded when someone visits the page, and no one visits that page in the middle of the night. So I made a Bash script which reads a file's first line, then adds one to that number and writes the new number to the file. This tutorial is how that Bash script works, not about the list view.\n\nSometimes you may want to look at a file's first line only. Command head is very useful for this. If you want to read only the first line of the file:\n\n```Bash\nhead -n 1 file\n```\n\nAnd if you want to see three lines of that file:\n\n```Bash\nhead -n 3 file\n```\n\nYou can also use `sed`. This prints the first line and then quits:\n\n```Bash\nsed q file\n```\n\nIn this case I wanted to read the first line of the file and save it as variable.\n\n```Bash\nfile=\"/path/to/file.txt\"\nline=$(head -n 1 \"$file\")\n```\n\nNow I have a number. If the number is not bigger than three, add one to that number. If the number is bigger than three it should be reset to one.\n\n```Bash\n(( line > 3 )) &amp;&amp; (( line++ )) || line=1\necho \"$line\" > \"$file\"\n```\n\nNow we have a new number which tells us which list we want to use next week and the script wrote it to the file. Here's the same script as a whole and shortcutted by <a href=\"https://www.reddit.com/user/galaktos\" rel=\"noopener\" target=\"_blank\">galaktos</a> from <a href=\"https://www.reddit.com/r/bash/comments/5tlap6/how_to_replace_a_line_in_a_text_file/\" rel=\"noopener\" target=\"_blank\">reddit</a>. Thanks for help.\n\n```Bash\n#!/bin/bash\nfile=\"/path/to/file.txt\"\nline=$(head -n1 -- \"$file\")\nprintf '%d\\n' \"$((++line>3?1:line))\" >| \"$file\"\n```\n\n## How to run a script automatically in Linux\n\nCrontab is our friend when we want to do things automatically in Linux. I wanted the script to run every Saturday.\n\n```Shell\ncrontab -e\n```\n\nAdd this line:\n\n```Crontab\n0 0 * * Sat /home/user/scripts/bash-script\n```\n\nThis command runs every Saturday at 00:00.  \nCron timing: minute 0-59, hour 0-23, day of month 1-31, month 1-12, day of week 0-6 (or Sun-Sat).\n\nNow we are all set. The number will change every Saturday till the end of the days (or till the server is dead)."],"names":["metadata","title","pub","published","modified","summary","layout"],"mappings":"25IAS2BA,4LAAAA,yIARbA,GAAYC,MAAQ,sFAAsFC,KAAO,GAAG,OAAOC,UAAY,2BAA2BC,SAAW,2BAA2BC,QAAU,mKAAmKC,OAAS"}